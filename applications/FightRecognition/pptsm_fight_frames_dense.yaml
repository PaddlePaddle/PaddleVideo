MODEL: #MODEL field
    framework: "Recognizer2D" #Mandatory, indicate the type of network, associate to the 'paddlevideo/modeling/framework/' .
    backbone: #Mandatory, indicate the type of backbone, associate to the 'paddlevideo/modeling/backbones/' .
        name: "ResNetTweaksTSM" #Mandatory, The name of backbone.
        pretrained: "/home/aistudio/ResNet50_vd_ssld_v2_pretrained.pdparams" #Optional, pretrained model path.
        depth: 50 #Optional, the depth of backbone architecture.
    head:
        name: "ppTSMHead" #Mandatory, indicate the type of head, associate to the 'paddlevideo/modeling/heads'
        num_classes: 2 # fight and nofight
        in_channels: 2048 #input channel of the extracted feature.
        drop_ratio: 0.5 #the ratio of dropout
        std: 0.01 #std value in params initialization
        ls_eps: 0.1 # label smooth

DATASET: #DATASET field
    batch_size: 1  #Mandatory, bacth size
    num_workers: 4  #Mandatory, XXX the number of subprocess on each GPU.
    test_batch_size: 1 #Mandatory, test bacth size
    train:
        format: "FrameDataset" #Mandatory, indicate the type of dataset, associate to the 'paddlevidel/loader/dateset'
        data_prefix: "" #Mandatory, train data root path
        file_path: "fight_train_list.txt" #Mandatory, train data index file path
        suffix: 'img_{:05}.jpg'
    valid:
        format: "FrameDataset" #Mandatory, indicate the type of dataset, associate to the 'paddlevidel/loader/dateset'
        data_prefix: "" #Mandatory, valid data root path
        file_path: "fight_val_list.txt" #Mandatory, valid data index file path
        suffix: 'img_{:05}.jpg'
    test:
        format: "FrameDataset" #Mandatory, indicate the type of dataset, associate to the 'paddlevidel/loader/dateset'
        data_prefix: "" #Mandatory, valid data root path
        file_path: "fight_val_list.txt" #Mandatory, valid data index file path
        suffix: 'img_{:05}.jpg'

PIPELINE: #PIPELINE field
    train: #Mandotary, indicate the pipeline to deal with the training data, associate to the 'paddlevideo/loader/pipelines/'
        decode:
            name: "FrameDecoder"
        sample:
            name: "Sampler"
            num_seg: 8
            seg_len: 1
            valid_mode: False
            dense_sample: True
        transform: #Mandotary, image transfrom operator
            - Scale:
                short_size: 340
            - MultiScaleCrop:
                target_size: 340
            - RandomCrop:
                target_size: 320
            - RandomFlip:
            - Image2Array:
            - Normalization:
                mean: [0.485, 0.456, 0.406]
                std: [0.229, 0.224, 0.225]
    valid: #Mandatory, indicate the pipeline to deal with the validing data. associate to the 'paddlevideo/loader/pipelines/'
        decode:
            name: "FrameDecoder"
        sample:
            name: "Sampler"
            num_seg: 8
            seg_len: 1
            valid_mode: True
        transform:
            - Scale:
                short_size: 340
            - CenterCrop:
                target_size: 320
            - Image2Array:
            - Normalization:
                mean: [0.485, 0.456, 0.406]
                std: [0.229, 0.224, 0.225]
    test:
        decode:
            name: "FrameDecoder"
        sample:
            name: "Sampler"
            num_seg: 8
            seg_len: 1
            valid_mode: True
            dense_sample: True
        transform:
            - Scale:
                short_size: 340
            - GroupFullResSample:
                crop_size: 320
            - Image2Array:
            - Normalization:
                mean: [0.485, 0.456, 0.406]
                std: [0.229, 0.224, 0.225]

OPTIMIZER: #OPTIMIZER field
  name: 'Momentum'
  momentum: 0.9
  learning_rate:
    iter_step: True
    name: 'CustomWarmupCosineDecay'
    max_epoch: 70
    warmup_epochs: 10
    warmup_start_lr: 0.002
    cosine_base_lr: 0.001
  weight_decay:
    name: 'L2'
    value: 1e-4
  use_nesterov: True

#MIX:
#    name: "Mixup"
#    alpha: 0.2

MIX:
    name: "VideoMix"
    cutmix_prob: 0.5
    mixup_alpha: 0.2
    cutmix_alpha: 1.0

PRECISEBN:
  preciseBN_interval: 5     # epoch interval to do preciseBN, default 1.
  num_iters_preciseBN: 200  # how many batches used to do preciseBN, default 200.


METRIC:
    name: 'CenterCropMetric'

INFERENCE:
    name: 'ppTSM_Inference_helper'
    num_seg: 8
    short_size: 340
    target_size: 320 #224

model_name: "ppTSM"
log_interval: 10 #Optional, the interal of logger, default:10
epochs: 80 #Mandatory, total epoch
log_level: "INFO" #Optional, the logger level. default: "INFO"

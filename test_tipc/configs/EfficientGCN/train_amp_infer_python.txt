===========================train_params===========================
model_name:EfficientGCN
python:python3.7
gpu_list:0
Global.use_gpu:null|null
Global.auto_cast:null
-o epochs:2
-o output_dir:null
-o DATASET.batch_size:null
null:null
train_model_name:null
train_infer_video_dir:null
null:null
##
trainer:amp_train
norm_train:main.py -c configs/recognition/efficientgcn/efficientgcn2001.yaml --seed 1234 -o DATASET.train.file_path="data/ntu-rgb-d/xsub/train_data.npy" -o DATASET.train.label_path="data/ntu-rgb-d/xsub/train_label.pkl" -o DATASET.test.file_path="data/ntu-rgb-d/xsub/val_data.npy" -o DATASET.test.label_path="data/ntu-rgb-d/xsub/val_label.pkl"
pact_train:null
fpgm_train:null
distill_train:null
amp_train:main.py --amp --amp_level='O2' -c configs/recognition/efficientgcn/efficientgcn2001.yaml --seed 1234 -o DATASET.train.file_path="data/ntu-rgb-d/xsub/train_data.npy" -o DATASET.train.label_path="data/ntu-rgb-d/xsub/train_label.pkl" -o DATASET.test.file_path="data/ntu-rgb-d/xsub/val_data.npy" -o DATASET.test.label_path="data/ntu-rgb-d/xsub/val_label.pkl"
null:null
##
===========================eval_params===========================
eval:main.py --test -c configs/recognition/efficientgcn/efficientgcn2001.yaml DATASET.train.file_path="data/ntu-rgb-d/xsub/train_data.npy" -o DATASET.train.label_path="data/ntu-rgb-d/xsub/train_label.pkl" -o DATASET.test.file_path="data/ntu-rgb-d/xsub/val_data.npy" -o DATASET.test.label_path="data/ntu-rgb-d/xsub/val_label.pkl"
-w:./test_tipc/output/EfficientGCN/EfficientGCN_epoch_00001.pdparams
##
===========================infer_params===========================
-o:inference/AGCN2s
-p:null
norm_export:tools/export_model.py -c configs/recognition/efficientgcn/efficientgcn2001.yaml --save_name inference
quant_export:null
fpgm_export:null
distill_export:null
export1:null
export2:null
inference_dir:null
infer_model:./test_tipc/output/EfficientGCN/EfficientGCN_epoch_00001.pdparams
infer_export:tools/export_model.py -c configs/recognition/efficientgcn/efficientgcn2001.yaml
infer_quant:False
inference:tools/predict.py --config configs/recognition/efficientgcn/efficientgcn2001.yaml
--use_gpu:True|False
--enable_mkldnn:False
--cpu_threads:1|6
--batch_size:1
--use_tensorrt:False
--precision:fp32|fp16
--model_file:inference.pdmodel
--input_file:./data/ntu-rgb-d/xsub/example_skeleton.npy
null:null
--enable_benchmark:True
--params_file:inference.pdiparams
===========================infer_benchmark_params==========================
random_infer_input:[{float32,[3, 6, 288, 25, 2]}]

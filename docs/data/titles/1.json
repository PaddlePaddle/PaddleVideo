{
    "/applications/EIVideo/EIVideo/paddlevideo/tasks/test.py:32-39": "Multi-card Test Configuration",
    "/applications/EIVideo/EIVideo/paddlevideo/utils/__init__.py": "PaddleVideo Library Utilities",
    "/applications/EIVideo/EIVideo/paddlevideo/utils/build_utils.py": "Building Objects with Config and Registry",
    "/applications/EIVideo/EIVideo/paddlevideo/utils/build_utils.py:1-31": "Build Object Function",
    "/applications/EIVideo/EIVideo/paddlevideo/utils/build_utils.py:32-35": "Build and Validate Object Class",
    "/applications/EIVideo/EIVideo/paddlevideo/utils/config.py": "Config Parser and Checker",
    "/applications/EIVideo/EIVideo/paddlevideo/utils/config.py:1-34": "Config Utilities Setup",
    "/applications/EIVideo/EIVideo/paddlevideo/utils/config.py:110-139": "Config Override Function",
    "/applications/EIVideo/EIVideo/paddlevideo/utils/config.py:140-170": "Dynamic Config Overrides",
    "/applications/EIVideo/EIVideo/paddlevideo/utils/config.py:171-174": "Check and Print Config",
    "/applications/EIVideo/EIVideo/paddlevideo/utils/config.py:35-67": "Config Parser and Printer",
    "/applications/EIVideo/EIVideo/paddlevideo/utils/config.py:68-109": "Config Utilities and Visualization Functions",
    "/applications/EIVideo/EIVideo/paddlevideo/utils/dist_utils.py": "Distributed Computing Utilities",
    "/applications/EIVideo/EIVideo/paddlevideo/utils/logger.py": "Customizing PaddleVideo Logging",
    "/applications/EIVideo/EIVideo/paddlevideo/utils/logger.py:1-38": "Colorful Logger: Setting Up Colors for Logging Messages in PaddleVideo",
    "/applications/EIVideo/EIVideo/paddlevideo/utils/logger.py:101-113": "Initialize and Set Logger Level",
    "/applications/EIVideo/EIVideo/paddlevideo/utils/logger.py:39-71": "PaddleVideo Logger Initialization",
    "/applications/EIVideo/EIVideo/paddlevideo/utils/logger.py:72-100": "Custom Logger Configuration for Python",
    "/applications/EIVideo/EIVideo/paddlevideo/utils/manet_utils.py": "OpenCV-Powered PyTorch Image Processing",
    "/applications/EIVideo/EIVideo/paddlevideo/utils/manet_utils.py:1-28": "Define Paddle Tensor Type Hints",
    "/applications/EIVideo/EIVideo/paddlevideo/utils/manet_utils.py:1000-1028": "Manet Initializer Function",
    "/applications/EIVideo/EIVideo/paddlevideo/utils/manet_utils.py:1029-1060": "Xavier Uniform Initialization for Tensors",
    "/applications/EIVideo/EIVideo/paddlevideo/utils/manet_utils.py:106-146": "Morphology-Based Mask Overlay",
    "/applications/EIVideo/EIVideo/paddlevideo/utils/manet_utils.py:1062-1089": "Xavier Initialization for Tensors",
    "/applications/EIVideo/EIVideo/paddlevideo/utils/manet_utils.py:1091-1120": "Xavier Normal Distribution Initialization in PyTorch",
    "/applications/EIVideo/EIVideo/paddlevideo/utils/manet_utils.py:1121-1145": "Kaiming Uniform Initialization Function",
    "/applications/EIVideo/EIVideo/paddlevideo/utils/manet_utils.py:1146-1170": "Kaiming Normal Tensor Initialization",
    "/applications/EIVideo/EIVideo/paddlevideo/utils/manet_utils.py:1171-1196": "Orthogonal Matrix and Kaiming Initialization Functions",
    "/applications/EIVideo/EIVideo/paddlevideo/utils/manet_utils.py:1197-1233": "Sparsity-Ensured Normal Tensor Initialization",
    "/applications/EIVideo/EIVideo/paddlevideo/utils/manet_utils.py:1234-1268": "Sparsity-Init Torch Tensor\n(or)\nSparse Torch Tensor Init\n(or)\nTorch Tensor Sparse Initializer",
    "/applications/EIVideo/EIVideo/paddlevideo/utils/manet_utils.py:1269-1295": "Deprecating Init Methods: Torch.nn to PaddleVideo",
    "/applications/EIVideo/EIVideo/paddlevideo/utils/manet_utils.py:147-172": "Generate Overlay Images and JSON List",
    "/applications/EIVideo/EIVideo/paddlevideo/utils/manet_utils.py:173-206": "Video Frame Loading and Labeling Utility",
    "/applications/EIVideo/EIVideo/paddlevideo/utils/manet_utils.py:207-236": "Efficient Scribble Label Processing Functions",
    "/applications/EIVideo/EIVideo/paddlevideo/utils/manet_utils.py:239-272": "Load and Save Pretrained Model Function",
    "/applications/EIVideo/EIVideo/paddlevideo/utils/manet_utils.py:273-304": "Damage Masks Generator",
    "/applications/EIVideo/EIVideo/paddlevideo/utils/manet_utils.py:29-41": "Unstructured Numeric Sequence",
    "/applications/EIVideo/EIVideo/paddlevideo/utils/manet_utils.py:305-330": "Mask Damage Utility",
    "/applications/EIVideo/EIVideo/paddlevideo/utils/manet_utils.py:331-361": "Randomly Shifting Numpy Mask",
    "/applications/EIVideo/EIVideo/paddlevideo/utils/manet_utils.py:362-388": "Randomly Manipulating Binary Masks for AI Robustness",
    "/applications/EIVideo/EIVideo/paddlevideo/utils/manet_utils.py:389-422": "Binary Mask Rotation and Scaling",
    "/applications/EIVideo/EIVideo/paddlevideo/utils/manet_utils.py:42-54": "Extract Integer List",
    "/applications/EIVideo/EIVideo/paddlevideo/utils/manet_utils.py:423-466": "PaddleVideo Utilities",
    "/applications/EIVideo/EIVideo/paddlevideo/utils/manet_utils.py:467-500": "Tensor to PIL Image Conversion",
    "/applications/EIVideo/EIVideo/paddlevideo/utils/manet_utils.py:501-529": "Adjusting Image Format for Compatibility",
    "/applications/EIVideo/EIVideo/paddlevideo/utils/manet_utils.py:530-553": "Image Mode Validator",
    "/applications/EIVideo/EIVideo/paddlevideo/utils/manet_utils.py:55-67": "List of Integers: Purpose Unclear",
    "/applications/EIVideo/EIVideo/paddlevideo/utils/manet_utils.py:554-578": "Compatibility Checker",
    "/applications/EIVideo/EIVideo/paddlevideo/utils/manet_utils.py:580-615": "Paddle-Torch Dictionary Converter",
    "/applications/EIVideo/EIVideo/paddlevideo/utils/manet_utils.py:616-640": "Gradient Norm Clipping Function",
    "/applications/EIVideo/EIVideo/paddlevideo/utils/manet_utils.py:641-666": "Total Norm of Parameters Calculation",
    "/applications/EIVideo/EIVideo/paddlevideo/utils/manet_utils.py:667-682": "Manet Gradient Scaling",
    "/applications/EIVideo/EIVideo/paddlevideo/utils/manet_utils.py:68-105": "Masked Damager Function",
    "/applications/EIVideo/EIVideo/paddlevideo/utils/manet_utils.py:683-716": "Max Index Gathering with PaddlePaddle",
    "/applications/EIVideo/EIVideo/paddlevideo/utils/manet_utils.py:717-745": "Tensor Sampling and Reshaping",
    "/applications/EIVideo/EIVideo/paddlevideo/utils/manet_utils.py:746-774": "Tensor Initialization Functions",
    "/applications/EIVideo/EIVideo/paddlevideo/utils/manet_utils.py:775-806": "Normalizing Tensor with PyTorch's Paddle",
    "/applications/EIVideo/EIVideo/paddlevideo/utils/manet_utils.py:807-833": "Recommended Gain for Nonlinearity Functions",
    "/applications/EIVideo/EIVideo/paddlevideo/utils/manet_utils.py:834-859": "Nonlinearity Mapping Function",
    "/applications/EIVideo/EIVideo/paddlevideo/utils/manet_utils.py:862-895": "Uniform and Normal Tensor Initialization Functions",
    "/applications/EIVideo/EIVideo/paddlevideo/utils/manet_utils.py:896-923": "Truncated Normal and Constant Tensor Filling",
    "/applications/EIVideo/EIVideo/paddlevideo/utils/manet_utils.py:924-966": "Tensor Filling Methods: Constant, Ones, Zeros, and Identity Matrix",
    "/applications/EIVideo/EIVideo/paddlevideo/utils/manet_utils.py:968-998": "Dirac and Identity Tensor Initializers",
    "/applications/EIVideo/EIVideo/paddlevideo/utils/precise_bn.py": "Precise Batch Normalization Improvement",
    "/applications/EIVideo/EIVideo/paddlevideo/utils/precise_bn.py:1-30": "Improved Batch Norm in EIVideo",
    "/applications/EIVideo/EIVideo/paddlevideo/utils/precise_bn.py:31-54": "Precise Batch Normalization Statistics",
    "/applications/EIVideo/EIVideo/paddlevideo/utils/precise_bn.py:55-80": "Precise BN Training Algorithm",
    "/applications/EIVideo/EIVideo/paddlevideo/utils/precise_bn.py:81-84": "Updating BatchNorm Layers in Model Training",
    "/applications/EIVideo/EIVideo/paddlevideo/utils/profiler.py": "PaddlePaddle Profiler Initialization",
    "/applications/EIVideo/EIVideo/paddlevideo/utils/profiler.py:1-29": "Global Variables and Profiler Options",
    "/applications/EIVideo/EIVideo/paddlevideo/utils/profiler.py:105-110": "Profiler Step Incrementer",
    "/applications/EIVideo/EIVideo/paddlevideo/utils/profiler.py:30-52": "Profiler Options Class",
    "/applications/EIVideo/EIVideo/paddlevideo/utils/profiler.py:53-76": "Profile Parser from String",
    "/applications/EIVideo/EIVideo/paddlevideo/utils/profiler.py:77-104": "Operator-Level Profiling with PaddlePaddle's Profiler",
    "/applications/EIVideo/EIVideo/paddlevideo/utils/record.py": "PaddleVideo Record: Metrics Tracking and Logging",
    "/applications/EIVideo/EIVideo/paddlevideo/utils/record.py:1-32": "Metrics Logger for Paddle Video",
    "/applications/EIVideo/EIVideo/paddlevideo/utils/record.py:114-141": "Epoch Metrics Logger",
    "/applications/EIVideo/EIVideo/paddlevideo/utils/record.py:142-157": "Epoch Metrics Logger",
    "/applications/EIVideo/EIVideo/paddlevideo/utils/record.py:33-49": "Framework-Specific Metric Recording",
    "/applications/EIVideo/EIVideo/paddlevideo/utils/record.py:50-72": "Average Meter for Metrics Tracking",
    "/applications/EIVideo/EIVideo/paddlevideo/utils/record.py:73-113": "Tracking Metrics Class",
    "/applications/EIVideo/EIVideo/paddlevideo/utils/registry.py": "Registry: Name-to-Object Mapping and Registration",
    "/applications/EIVideo/EIVideo/paddlevideo/utils/registry.py:1-34": "Registry Class for Custom Modules",
    "/applications/EIVideo/EIVideo/paddlevideo/utils/registry.py:36-70": "Object Registry Manager",
    "/applications/EIVideo/EIVideo/paddlevideo/utils/registry.py:71-96": "Registry Class and Methods",
    "/applications/EIVideo/EIVideo/paddlevideo/utils/save_load.py": "ViT Adaptor with PaddlePaddle Compatibility",
    "/applications/EIVideo/EIVideo/paddlevideo/utils/save_load.py:1-28": "ViT Model Adaptation for Existing Architecture",
    "/applications/EIVideo/EIVideo/paddlevideo/utils/save_load.py:128-152": "Resnet and Vision Transformer Weights Loader",
    "/applications/EIVideo/EIVideo/paddlevideo/utils/save_load.py:153-182": "Load and Save PaddlePaddle Models",
    "/applications/EIVideo/EIVideo/paddlevideo/utils/save_load.py:29-49": "Maintaining 'pos_embed' Tensor Consistency",
    "/applications/EIVideo/EIVideo/paddlevideo/utils/save_load.py:51-71": "Adjusting Time Embedding Shape",
    "/applications/EIVideo/EIVideo/paddlevideo/utils/save_load.py:72-96": "Temporal State Dictionary Merge",
    "/applications/EIVideo/EIVideo/paddlevideo/utils/save_load.py:97-127": "Loading Pre-trained Model Parameters",
    "/applications/EIVideo/EIVideo/paddlevideo/version.py": "PaddleVideo Version Info",
    "/applications/EIVideo/EIVideo/setup.py": "Code Credits and Sources",
    "/applications/EIVideo/EIVideo/version.py": "EIVideo Version Information",
    "/applications/EIVideo/QEIVideo/__init__.py": "QEIVideo Path and Version",
    "/applications/EIVideo/QEIVideo/build_gui.py": "Video GUI with PyQt5: Functionality Overview",
    "/applications/EIVideo/QEIVideo/build_gui.py:1-36": "PyQt5 GUI Builder Script",
    "/applications/EIVideo/QEIVideo/build_gui.py:109-135": "GUI Application Functions",
    "/applications/EIVideo/QEIVideo/build_gui.py:136-151": "Update Frame in QEIVideo GUI",
    "/applications/EIVideo/QEIVideo/build_gui.py:37-59": "Progress Bar and Play Button Functionality",
    "/applications/EIVideo/QEIVideo/build_gui.py:60-78": "Interactive Video Controls: Stop, Start, Select",
    "/applications/EIVideo/QEIVideo/build_gui.py:79-107": "Video Processing GUI with Eraser Mode",
    "/applications/EIVideo/QEIVideo/gui/__init__.py": "PaddleVideo's EIVideo Copyright Comment Block",
    "/applications/EIVideo/QEIVideo/gui/demo.py": "DrawFrame Class for QT UI",
    "/applications/EIVideo/QEIVideo/gui/demo.py:1-36": "Interactive QWidget Drawing Class",
    "/applications/EIVideo/QEIVideo/gui/demo.py:39-62": "DemoUI Frame Drawing Initialization",
    "/applications/EIVideo/QEIVideo/gui/ui_main_window.py": "EIVideo App UI Initialization",
    "/applications/EIVideo/QEIVideo/gui/ui_main_window.py:1-32": "Video Application Main Window Initialization",
    "/applications/EIVideo/QEIVideo/gui/ui_main_window.py:102-122": "Video Player UI Creation and Interaction",
    "/applications/EIVideo/QEIVideo/gui/ui_main_window.py:123-142": "Initializing Push Buttons and Layouts",
    "/applications/EIVideo/QEIVideo/gui/ui_main_window.py:143-164": "Creating App's Main UI",
    "/applications/EIVideo/QEIVideo/gui/ui_main_window.py:165-167": "GUI Element Updates in MainWindow",
    "/applications/EIVideo/QEIVideo/gui/ui_main_window.py:33-56": "UI Initialization in Video App",
    "/applications/EIVideo/QEIVideo/gui/ui_main_window.py:57-77": "GUI Setup for EIVideo",
    "/applications/EIVideo/QEIVideo/gui/ui_main_window.py:78-101": "Painting App UI Setup",
    "/applications/EIVideo/QEIVideo/start.py": "Launch QEIVideo GUI with Python",
    "/applications/EIVideo/QEIVideo/tools/__init__.py": "PaddleVideo QEIVideo Comment Block",
    "/applications/EIVideo/QEIVideo/ui/__init__.py": "EIVideo UI Init File Comment",
    "/applications/EIVideo/QEIVideo/ui/demo.py": "Interactive PyQt5 Video Player UI",
    "/applications/EIVideo/QEIVideo/ui/demo.py:1-25": "PyQt5 UI Generated Main Window Code",
    "/applications/EIVideo/QEIVideo/ui/demo.py:26-41": "Video Player Interface Setup",
    "/applications/EIVideo/QEIVideo/ui/demo.py:42-58": "Creating Video Player Buttons and Slider",
    "/applications/EIVideo/QEIVideo/ui/demo.py:59-77": "GUI Layout for Video Player Application",
    "/applications/EIVideo/QEIVideo/ui/demo.py:78-97": "Creating Tab Widget with QProgressBar and QLabel",
    "/applications/EIVideo/QEIVideo/ui/demo.py:98-113": "QEIVideo UI Configuration",
    "/applications/EIVideo/QEIVideo/version.py": "EIVideo Version Info",
    "/applications/EIVideo/QEIVideo/widget/PaintBoard.py": "PaintBoard: QWidget for Drawing & Erasing",
    "/applications/EIVideo/QEIVideo/widget/PaintBoard.py:1-40": "PaintBoard: Custom QWidget for Graphic Editing",
    "/applications/EIVideo/QEIVideo/widget/PaintBoard.py:42-78": "PaintBoard Class Functions",
    "/applications/EIVideo/QEIVideo/widget/PaintBoard.py:80-106": "Mouse Event Handler for PaintBoard Drawing",
    "/applications/EIVideo/README.md": "EIVideo: Windows Video Annotation Tool",
    "/applications/EIVideo/README.md:1-15": "Interactive Intelligent Video Annotation Tool",
    "/applications/EIVideo/README.md:121-123": "Emoji and Resource Sources",
    "/applications/EIVideo/README.md:16-49": "Interactive Video Annotation Toolbox",
    "/applications/EIVideo/README.md:51-85": "Introducing EIVideo: Customizable Interactive Video Annotation",
    "/applications/EIVideo/README.md:86-119": "QEIVideo Installation and Roadmap Guide",
    "/applications/EIVideo/resources/QT/demo.ui": "Qt Video Demo UI Designer",
    "/applications/EIVideo/resources/QT/demo.ui:1-44": "Main Window Interface Design",
    "/applications/EIVideo/resources/QT/demo.ui:126-169": "User Interface Layout Design",
    "/applications/EIVideo/resources/QT/demo.ui:170-212": "Qt UI Layout Design",
    "/applications/EIVideo/resources/QT/demo.ui:213-236": "Qt Application User Interface Layout: Demo.ui",
    "/applications/EIVideo/resources/QT/demo.ui:45-86": "UI Design: Video Open Button",
    "/applications/EIVideo/resources/QT/demo.ui:87-125": "UI Design with Chinese Buttons",
    "/applications/EIVideo/resources/cmd": "Updating EIVideo: PaddleGit Operations",
    "/applications/FightRecognition/README.md": "Fight Recognition Model Guide",
    "/applications/FightRecognition/README.md:1-29": "Fight Recognition with PaddleVideo PP-TSM",
    "/applications/FightRecognition/README.md:119-160": "Train and Validate Video Lists Generation",
    "/applications/FightRecognition/README.md:162-192": "Cut Video Function",
    "/applications/FightRecognition/README.md:193-245": "End of Model Training Code Snippet",
    "/applications/FightRecognition/README.md:246-248": "Loading and Saving Pre-Trained Model",
    "/applications/FightRecognition/README.md:31-55": "Python Script Executes Fight Prediction Model",
    "/applications/FightRecognition/README.md:56-75": "Fight Detection Datasets and Training Approach",
    "/applications/FightRecognition/README.md:77-118": "Multi-Dataset Fight Recognition Tool",
    "/applications/FigureSkating/README.md": "OpenPose for Figure Skating Analysis",
    "/applications/FigureSkating/README.md:1-46": "Figure Skating Action Data Processing with OpenPose",
    "/applications/FigureSkating/README.md:48-92": "Training Figure Skating Models with Video Data",
    "/applications/FootballAction/README.md": "FootballAction Model Improvements in PaddleVideo",
    "/applications/FootballAction/README.md:1-54": "Soccer Action Detection Algorithm in PaddleVideo",
    "/applications/FootballAction/README.md:119-141": "Comprehensive FootballAction Dataset Directory",
    "/applications/FootballAction/README.md:142-201": "Download, Run and Train PP-TSM for FootballAction",
    "/applications/FootballAction/README.md:202-230": "Updating Recognizer2D and Exporting PP-TSM Model",
    "/applications/FootballAction/README.md:231-275": "Replacing Output Tensor and Extracting Features",
    "/applications/FootballAction/README.md:276-320": "BMN Dataset Creation Script",
    "/applications/FootballAction/README.md:321-362": "BMN Model Export and Prediction",
    "/applications/FootballAction/README.md:363-408": "Attention LSTM Improvements in FootballAction",
    "/applications/FootballAction/README.md:409-441": "LSTM Training Data Snippet",
    "/applications/FootballAction/README.md:442-493": "LSTM Training and Prediction Code",
    "/applications/FootballAction/README.md:494-513": "Improved PP-TSM Model for Football Action Detection",
    "/applications/FootballAction/README.md:55-118": "Football Action Dataset Preprocessing",
    "/applications/FootballAction/checkpoints/download.sh": "FootballAction Checkpoints Download Script",
    "/applications/FootballAction/datasets/EuroCup2016/dataset_url.list": "EuroCup2016 Video Dataset URLs",
    "/applications/FootballAction/datasets/EuroCup2016/dataset_url.list:1-11": "EuroCup2016 Dataset URLs",
    "/applications/FootballAction/datasets/EuroCup2016/dataset_url.list:12-22": "EuroCup2016 Dataset Download URLs",
    "/applications/FootballAction/datasets/EuroCup2016/dataset_url.list:23-33": "EuroCup2016 Video URLs List",
    "/applications/FootballAction/datasets/EuroCup2016/dataset_url.list:34-44": "EuroCup2016 Dataset URL Listing",
    "/applications/FootballAction/datasets/EuroCup2016/dataset_url.list:45-49": "EuroCup2016 Video URLs",
    "/applications/FootballAction/datasets/EuroCup2016/download_dataset.sh": "Download EuroCup2016 Videos",
    "/applications/FootballAction/datasets/EuroCup2016/download_dataset.sh:1-13": "Download EuroCup2016 Videos",
    "/applications/FootballAction/datasets/EuroCup2016/download_dataset.sh:14-24": "EuroCup2016 Video Download Script",
    "/applications/FootballAction/datasets/EuroCup2016/download_dataset.sh:25-35": "EuroCup2016 Video Download",
    "/applications/FootballAction/datasets/EuroCup2016/download_dataset.sh:36-46": "EuroCup2016 Video Download Script",
    "/applications/FootballAction/datasets/EuroCup2016/download_dataset.sh:47-51": "Download EuroCup2016 Mp4 Files",
    "/applications/FootballAction/datasets/EuroCup2016/url.list": "EuroCup2016 Video URLs",
    "/applications/FootballAction/datasets/EuroCup2016/url.list:1-26": "FootballAction EuroCup2016 URL List",
    "/applications/FootballAction/datasets/EuroCup2016/url.list:27-49": "EuroCup2016: FootballAction URLs List",
    "/applications/FootballAction/datasets/EuroCup2016/url_val.list": "Video URL List for EuroCup2016",
    "/applications/FootballAction/datasets/script/get_frames_pcm.py": "Parallel FFmpeg Frame and Audio Extraction",
    "/applications/FootballAction/datasets/script/get_frames_pcm.py:1-37": "Extract Frames and PCM Audio from Videos",
    "/applications/FootballAction/datasets/script/get_frames_pcm.py:38-54": "Multithreaded MP4 Parser",
    "/applications/FootballAction/datasets/script/get_instance_for_bmn.py": "BMN Instance Extraction Script",
    "/applications/FootballAction/datasets/script/get_instance_for_bmn.py:1-42": "BMN GT Data Processor Script",
    "/applications/FootballAction/datasets/script/get_instance_for_bmn.py:103-128": "Segmenting Actions with Before/After IDs",
    "/applications/FootballAction/datasets/script/get_instance_for_bmn.py:129-147": "Random Video Segment Selection and Annotation",
    "/applications/FootballAction/datasets/script/get_instance_for_bmn.py:148-178": "Saving Features with get_instance_for_bmn",
    "/applications/FootballAction/datasets/script/get_instance_for_bmn.py:180-205": "Reshaping and Concatenating Feature Arrays",
    "/applications/FootballAction/datasets/script/get_instance_for_bmn.py:206-216": "BMN Data Processing Pipeline",
    "/applications/FootballAction/datasets/script/get_instance_for_bmn.py:43-69": "Filtering Actions by Duration",
    "/applications/FootballAction/datasets/script/get_instance_for_bmn.py:70-102": "BMN Window GT Data Combination",
    "/applications/FootballAction/datasets/script/get_instance_for_lstm.py": "Python Script for Football Dataset Preparation",
    "/applications/FootballAction/datasets/script/get_instance_for_lstm.py:1-44": "IoU/IOA Calculator for LSTM Models",
    "/applications/FootballAction/datasets/script/get_instance_for_lstm.py:111-130": "Splitting Datasets for Football Actions",
    "/applications/FootballAction/datasets/script/get_instance_for_lstm.py:132-161": "Save Video Features and Labels to Files",
    "/applications/FootballAction/datasets/script/get_instance_for_lstm.py:162-172": "Label File Processing Script",
    "/applications/FootballAction/datasets/script/get_instance_for_lstm.py:45-80": "IoU and IOA Comparison Tool",
    "/applications/FootballAction/datasets/script/get_instance_for_lstm.py:82-110": "Evaluate Proposals with IoU Threshold",
    "/applications/FootballAction/datasets/script/get_instance_for_pptsm.py": "Action Detection and Dataset Generation",
    "/applications/FootballAction/datasets/script/get_instance_for_pptsm.py:1-38": "Action Instance Extractor",
    "/applications/FootballAction/datasets/script/get_instance_for_pptsm.py:39-65": "Generating Positive and Negative Action Instances",
    "/applications/FootballAction/datasets/script/get_instance_for_pptsm.py:66-96": "Multiprocessing Dataset Instantiation and Saving",
    "/applications/FootballAction/datasets/script/get_instance_for_pptsm.py:97-97": "File Path for Validation List",
    "/applications/FootballAction/extractor/extract_bmn.py": "Video Classification and Detection Script",
    "/applications/FootballAction/extractor/extract_bmn.py:1-49": "Video Classification Model with Baidu Cloud",
    "/applications/FootballAction/extractor/extract_bmn.py:50-83": "Video Feature Extraction and Proposal Prediction",
    "/applications/FootballAction/extractor/extract_bmn.py:84-91": "JSON Proposal Saver",
    "/applications/FootballAction/extractor/extract_feat.py": "Baidu Cloud Model-based Video Classifier",
    "/applications/FootballAction/extractor/extract_feat.py:1-50": "Baidu Cloud Action Video Classifier",
    "/applications/FootballAction/extractor/extract_feat.py:51-74": "Video Feature Extraction and Conversion",
    "/applications/FootballAction/extractor/extract_feat.py:75-100": "Video Feature Extractor and Classifier",
    "/applications/FootballAction/predict/action_detect/action.py": "Baidu Cloud Action Detection System using ML",
    "/applications/FootballAction/predict/action_detect/action.py:1-44": "Baidu Action Detection System",
    "/applications/FootballAction/predict/action_detect/action.py:104-132": "Action Detection Methods and Tracking in Football",
    "/applications/FootballAction/predict/action_detect/action.py:133-151": "Configure PPTSM Model and Predict Features",
    "/applications/FootballAction/predict/action_detect/action.py:152-173": "Video Feature Processing for Action Detection",
    "/applications/FootballAction/predict/action_detect/action.py:45-71": "Initialize ModelPredict Object",
    "/applications/FootballAction/predict/action_detect/action.py:72-103": "Action Detection Model Initialization",
    "/applications/FootballAction/predict/action_detect/logger.py": "Custom Logger for News Stripper",
    "/applications/FootballAction/predict/action_detect/mfcc/feature_extractor.py": "MFCC-based Action Detection in Football",
    "/applications/FootballAction/predict/action_detect/mfcc/feature_extractor.py:1-38": "MFCC Feature Extraction Algorithm",
    "/applications/FootballAction/predict/action_detect/mfcc/feature_extractor.py:112-136": "MFCC-based Audio Feature Extraction",
    "/applications/FootballAction/predict/action_detect/mfcc/feature_extractor.py:137-157": "Audio Feature Extraction for Action Detection",
    "/applications/FootballAction/predict/action_detect/mfcc/feature_extractor.py:159-182": "Audio Feature Extraction from WAV Files",
    "/applications/FootballAction/predict/action_detect/mfcc/feature_extractor.py:39-69": "Mel Scale Audio Feature Extraction",
    "/applications/FootballAction/predict/action_detect/mfcc/feature_extractor.py:70-90": "Extract MFCC Features from Speech Audio",
    "/applications/FootballAction/predict/action_detect/mfcc/feature_extractor.py:91-111": "Spectrogram Calculator Function",
    "/applications/FootballAction/predict/action_detect/mfcc/model_config.py": "ModelAudio: Extract, Slice, Predict",
    "/applications/FootballAction/predict/action_detect/mfcc/vgg_params.py": "VGGish Model Parameters and Configurations",
    "/applications/FootballAction/predict/action_detect/models/audio_infer.py": "Audio Inference with InferModel",
    "/applications/FootballAction/predict/action_detect/models/bmn_infer.py": "BMN Infer Action Detection",
    "/applications/FootballAction/predict/action_detect/models/bmn_infer.py:1-37": "BMN Infer App Class Definition",
    "/applications/FootballAction/predict/action_detect/models/bmn_infer.py:112-131": "Average-Window Action Detection",
    "/applications/FootballAction/predict/action_detect/models/bmn_infer.py:133-156": "BMN Inference & JSON Saving",
    "/applications/FootballAction/predict/action_detect/models/bmn_infer.py:38-63": "BMN Inference Process",
    "/applications/FootballAction/predict/action_detect/models/bmn_infer.py:64-86": "Boundary Score Calculator",
    "/applications/FootballAction/predict/action_detect/models/bmn_infer.py:87-111": "Boundary-Based Mask Selection",
    "/applications/FootballAction/predict/action_detect/models/lstm_infer.py": "Efficient LSTM Football Action Prediction",
    "/applications/FootballAction/predict/action_detect/models/lstm_infer.py:1-36": "Football Action Inference with PaddlePaddle",
    "/applications/FootballAction/predict/action_detect/models/lstm_infer.py:111-137": "Initialize InferModel and Load Data",
    "/applications/FootballAction/predict/action_detect/models/lstm_infer.py:138-152": "Efficient Action Detection",
    "/applications/FootballAction/predict/action_detect/models/lstm_infer.py:37-61": "LSTM Model for Video Action Detection",
    "/applications/FootballAction/predict/action_detect/models/lstm_infer.py:62-91": "LSTM Data Processing and Prediction",
    "/applications/FootballAction/predict/action_detect/models/lstm_infer.py:92-110": "LSTM Inferencing for Action Detection",
    "/applications/FootballAction/predict/action_detect/models/pptsm_infer.py": "PPTSM Inference for Football Actions",
    "/applications/FootballAction/predict/action_detect/models/pptsm_infer.py:1-38": "PPTSM Model Inference Class",
    "/applications/FootballAction/predict/action_detect/models/pptsm_infer.py:40-67": "PPTSM Inference Script",
    "/applications/FootballAction/predict/action_detect/models/pptsm_infer.py:69-78": "Football Action Prediction Model",
    "/applications/FootballAction/predict/action_detect/reader/__init__.py": "Alphabetical Action Readers",
    "/applications/FootballAction/predict/action_detect/reader/audio_reader.py": "AudioReader for YouTube-8M Dataset",
    "/applications/FootballAction/predict/action_detect/reader/bmninf_reader.py": "BMNINF Reader for Football Action Detection",
    "/applications/FootballAction/predict/action_detect/reader/bmninf_reader.py:1-49": "BMNINF Reader: FootballAction Data Reader",
    "/applications/FootballAction/predict/action_detect/reader/bmninf_reader.py:106-138": "BMNINF Reader Function",
    "/applications/FootballAction/predict/action_detect/reader/bmninf_reader.py:139-155": "Video Batch Reader for Football Action Detection",
    "/applications/FootballAction/predict/action_detect/reader/bmninf_reader.py:50-73": "Bmninf Reader Initialization",
    "/applications/FootballAction/predict/action_detect/reader/bmninf_reader.py:74-105": "Football Action Detection Reader",
    "/applications/FootballAction/predict/action_detect/reader/feature_reader.py": "Attention-Based LSTM Feature Reader",
    "/applications/FootballAction/predict/action_detect/reader/feature_reader.py:1-33": "Attention-Based LSTM Feature Reader",
    "/applications/FootballAction/predict/action_detect/reader/feature_reader.py:35-71": "Feature Reader Initialization",
    "/applications/FootballAction/predict/action_detect/reader/feature_reader.py:72-86": "Multi-Feature Reader",
    "/applications/FootballAction/predict/action_detect/reader/reader_utils.py": "Video Reader Utils",
    "/applications/FootballAction/predict/action_detect/reader/tsminf_reader.py": "Threaded TSMINF Reader for Football Action Detection",
    "/applications/FootballAction/predict/action_detect/reader/tsminf_reader.py:1-38": "TSMINF Video Reader Class",
    "/applications/FootballAction/predict/action_detect/reader/tsminf_reader.py:120-141": "Image Data Inference and Transformation",
    "/applications/FootballAction/predict/action_detect/reader/tsminf_reader.py:143-180": "Image Transformation Function",
    "/applications/FootballAction/predict/action_detect/reader/tsminf_reader.py:181-212": "Image Preprocessing for Football Action Detection",
    "/applications/FootballAction/predict/action_detect/reader/tsminf_reader.py:213-242": "Random Crop with Offset Adjustment",
    "/applications/FootballAction/predict/action_detect/reader/tsminf_reader.py:243-267": "Random Crop Sizes for Action Detection",
    "/applications/FootballAction/predict/action_detect/reader/tsminf_reader.py:268-307": "Image Processing Functions",
    "/applications/FootballAction/predict/action_detect/reader/tsminf_reader.py:308-349": "Image Group Manipulation Techniques",
    "/applications/FootballAction/predict/action_detect/reader/tsminf_reader.py:350-357": "Adaptive Image Resizer",
    "/applications/FootballAction/predict/action_detect/reader/tsminf_reader.py:39-64": "TSN Video Reader Initialization",
    "/applications/FootballAction/predict/action_detect/reader/tsminf_reader.py:65-97": "Video Image Batch Reader for Inference",
    "/applications/FootballAction/predict/action_detect/reader/tsminf_reader.py:98-119": "Multithreaded Video Image Reader",
    "/applications/FootballAction/predict/action_detect/utils/config_utils.py": "Config Utils for Basketball Action",
    "/applications/FootballAction/predict/action_detect/utils/preprocess.py": "FFmpeg Tools for Video Processing",
    "/applications/FootballAction/predict/action_detect/utils/process_result.py": "Action Detection with NMS Filtering",
    "/applications/FootballAction/predict/eval.py": "Evaluating Model Performance with F1 Scores",
    "/applications/FootballAction/predict/eval.py:1-36": "Initializing Ground Truth Data",
    "/applications/FootballAction/predict/eval.py:121-144": "Box IOU Evaluator",
    "/applications/FootballAction/predict/eval.py:146-161": "Subtask Precision and Recall Calculator",
    "/applications/FootballAction/predict/eval.py:162-189": "FootballAction Prediction Evaluation",
    "/applications/FootballAction/predict/eval.py:190-218": "Football Action Prediction Evaluation",
    "/applications/FootballAction/predict/eval.py:219-237": "Optimal Threshold Selection",
    "/applications/FootballAction/predict/eval.py:37-67": "IoU and Proposal Conversion Functions",
    "/applications/FootballAction/predict/eval.py:68-93": "Filtered Boxes and Ground Truth Conversion",
    "/applications/FootballAction/predict/eval.py:94-120": "Intersection over Union Evaluation Functions",
    "/applications/FootballAction/predict/predict.py": "Football Action Detection Model Prediction",
    "/applications/FootballAction/predict/predict.py:1-33": "Video Action Detection Script",
    "/applications/FootballAction/predict/predict.py:35-37": "JSON Data Output in FootballAction App",
    "/applications/Ma-Net/README.md": "MA-Net Model for PaddleVideo: DAVIS Dataset Training & Testing"
}
{
    "/paddlevideo/modeling/backbones/resnet_tweaks_tsm.py": "TSM ResNet Backbone for Temporal Segment Networks",
    "/paddlevideo/modeling/backbones/resnet_tweaks_tsm.py:1-31": "TSM ResNet Backbone Imports",
    "/paddlevideo/modeling/backbones/resnet_tweaks_tsm.py:106-132": "BottleneckBlock in ResNet-TSM",
    "/paddlevideo/modeling/backbones/resnet_tweaks_tsm.py:133-159": "Resnet TSM Backbone: Forward Method",
    "/paddlevideo/modeling/backbones/resnet_tweaks_tsm.py:160-192": "Temporal Shifted ResNet Backbone",
    "/paddlevideo/modeling/backbones/resnet_tweaks_tsm.py:193-217": "ResNet TSM Block Definition",
    "/paddlevideo/modeling/backbones/resnet_tweaks_tsm.py:218-253": "ResNet TSM Backbone Model Init & Forward",
    "/paddlevideo/modeling/backbones/resnet_tweaks_tsm.py:254-279": "ResNet Model Depth Customization",
    "/paddlevideo/modeling/backbones/resnet_tweaks_tsm.py:280-301": "TSM-ResNet Backbone with Tweaks",
    "/paddlevideo/modeling/backbones/resnet_tweaks_tsm.py:302-322": "ResNet Block Assignment Algorithm",
    "/paddlevideo/modeling/backbones/resnet_tweaks_tsm.py:32-54": "ConvBNLayer: Combined Conv2D and BatchNorm2D Layers",
    "/paddlevideo/modeling/backbones/resnet_tweaks_tsm.py:323-339": "ResNet TSM Backbone Weights Init",
    "/paddlevideo/modeling/backbones/resnet_tweaks_tsm.py:340-362": "Backbone Weights Initialization",
    "/paddlevideo/modeling/backbones/resnet_tweaks_tsm.py:55-78": "ResNet-D Tweak ConvBN Layer",
    "/paddlevideo/modeling/backbones/resnet_tweaks_tsm.py:79-105": "Tweakable Convolutional Neural Network with Batch Normalization",
    "/paddlevideo/modeling/backbones/resnet_tweaks_tsn.py": "ResNet TSN Model Backbones: PaddleVideo",
    "/paddlevideo/modeling/backbones/resnet_tweaks_tsn.py:1-29": "ResNet Tweaks TSN Model Backbone",
    "/paddlevideo/modeling/backbones/resnet_tweaks_tsn.py:112-144": "ResNet Block Implementation",
    "/paddlevideo/modeling/backbones/resnet_tweaks_tsn.py:145-167": "BasicBlock Convolutional Layers and BatchNorm",
    "/paddlevideo/modeling/backbones/resnet_tweaks_tsn.py:168-203": "ResNetTweaksTSN Backbone: Convolution, Shortcut, and ReLU",
    "/paddlevideo/modeling/backbones/resnet_tweaks_tsn.py:204-232": "ResNet Backbone Configurations",
    "/paddlevideo/modeling/backbones/resnet_tweaks_tsn.py:233-254": "First Layer ResNet Backbone Definition",
    "/paddlevideo/modeling/backbones/resnet_tweaks_tsn.py:255-276": "ResNet-TSN Backbone Code",
    "/paddlevideo/modeling/backbones/resnet_tweaks_tsn.py:277-296": "Dynamic ResNet Tweaks for TSN",
    "/paddlevideo/modeling/backbones/resnet_tweaks_tsn.py:297-314": "Pre-Trained Weights Initialization in ResNet Backbone",
    "/paddlevideo/modeling/backbones/resnet_tweaks_tsn.py:31-58": "Tailored ResNet Backbone with Pooling",
    "/paddlevideo/modeling/backbones/resnet_tweaks_tsn.py:315-328": "ResNet Tweaks TSN Initialization",
    "/paddlevideo/modeling/backbones/resnet_tweaks_tsn.py:59-89": "ResNet-TSN Tweaks Backbone",
    "/paddlevideo/modeling/backbones/resnet_tweaks_tsn.py:90-111": "Bottleneck Block: ResNet Parameter Reduction",
    "/paddlevideo/modeling/backbones/resnext101.py": "ResNeXt-101 in PaddlePaddle",
    "/paddlevideo/modeling/backbones/resnext101.py:1-31": "ConvBNLayer Class in PaddlePaddle",
    "/paddlevideo/modeling/backbones/resnext101.py:123-148": "ResNext101 Backbone Architecture",
    "/paddlevideo/modeling/backbones/resnext101.py:149-176": "ResNeXt-101 Model Implementation",
    "/paddlevideo/modeling/backbones/resnext101.py:177-187": "ResNext101: Constructing and Applying Layers",
    "/paddlevideo/modeling/backbones/resnext101.py:32-55": "ConvBNLayer Initialization",
    "/paddlevideo/modeling/backbones/resnext101.py:56-82": "ResNeXt101 Bottleneck Block and Downsampling",
    "/paddlevideo/modeling/backbones/resnext101.py:83-122": "ResNeXt Model Definition",
    "/paddlevideo/modeling/backbones/stgcn.py": "STGCN: Skeleton-based Action Recognition Backbone",
    "/paddlevideo/modeling/backbones/stgcn.py:1-37": "STGCN Backbone Definition",
    "/paddlevideo/modeling/backbones/stgcn.py:105-120": "Node Initialization in STGCN and COCO Keypoint Backbones",
    "/paddlevideo/modeling/backbones/stgcn.py:121-143": "Adjacency Matrix Initialization for STGCN",
    "/paddlevideo/modeling/backbones/stgcn.py:144-174": "ConvTemporalGraphical Layer Initialization in STGCN",
    "/paddlevideo/modeling/backbones/stgcn.py:175-209": "Temporal Graph Convolutions in STGCN",
    "/paddlevideo/modeling/backbones/stgcn.py:210-251": "STGCN Model: Spatial and Temporal Processing",
    "/paddlevideo/modeling/backbones/stgcn.py:251-278": "Skeleton Action Recognition with STGCN",
    "/paddlevideo/modeling/backbones/stgcn.py:279-300": "ST-GCN Block Initialization",
    "/paddlevideo/modeling/backbones/stgcn.py:301-327": "StGCN Edge Importance Initialization",
    "/paddlevideo/modeling/backbones/stgcn.py:328-343": "ST-GCN Pooling and Reshaping",
    "/paddlevideo/modeling/backbones/stgcn.py:38-80": "Graph Hopping and Normalization",
    "/paddlevideo/modeling/backbones/stgcn.py:81-104": "Hop Distance Initialization in ST-GCN",
    "/paddlevideo/modeling/backbones/swin_transformer.py": "Swin Transformer 3D Backbone in PaddleVideo",
    "/paddlevideo/modeling/backbones/swin_transformer.py:1-33": "Swin Transformer Stochastic Depth",
    "/paddlevideo/modeling/backbones/swin_transformer.py:100-137": "Swin Transformer Window Rearrangement",
    "/paddlevideo/modeling/backbones/swin_transformer.py:138-161": "Window-based Multi-Head Self Attention with Relative Position Bias",
    "/paddlevideo/modeling/backbones/swin_transformer.py:162-185": "Swin Transformer Self-Attention Initialization",
    "/paddlevideo/modeling/backbones/swin_transformer.py:186-204": "Swin Transformer: Relative Position Encoding",
    "/paddlevideo/modeling/backbones/swin_transformer.py:205-232": "Swin Transformer Backbone Initialization",
    "/paddlevideo/modeling/backbones/swin_transformer.py:233-261": "Swin Transformer Block 3D Implementation",
    "/paddlevideo/modeling/backbones/swin_transformer.py:262-282": "Swin Transformer Backbone Initialization",
    "/paddlevideo/modeling/backbones/swin_transformer.py:283-307": "Swin Transformer Backbone Initialization",
    "/paddlevideo/modeling/backbones/swin_transformer.py:308-330": "Swin Transformer Backbone Initialization",
    "/paddlevideo/modeling/backbones/swin_transformer.py:331-353": "Swin Transformer: Cyclic Shift and Windowed Self-Attention",
    "/paddlevideo/modeling/backbones/swin_transformer.py:34-64": "Stochastic Depth DropPath Layer",
    "/paddlevideo/modeling/backbones/swin_transformer.py:354-390": "Swin Transformer Forward Pass",
    "/paddlevideo/modeling/backbones/swin_transformer.py:391-426": "Swin Transformer Image Backbone",
    "/paddlevideo/modeling/backbones/swin_transformer.py:427-443": "Swin Transformer Attention Mask Generation",
    "/paddlevideo/modeling/backbones/swin_transformer.py:444-464": "Customizable Swin Transformer Layer",
    "/paddlevideo/modeling/backbones/swin_transformer.py:464-493": "Swin Transformer 3D Block Definition",
    "/paddlevideo/modeling/backbones/swin_transformer.py:494-522": "Swin Transformer Block for PaddleVideo",
    "/paddlevideo/modeling/backbones/swin_transformer.py:523-551": "Video Patch Embedding for Swin Transformer",
    "/paddlevideo/modeling/backbones/swin_transformer.py:553-581": "Swin Transformer Backbone Initialization",
    "/paddlevideo/modeling/backbones/swin_transformer.py:582-604": "Swin Transformer 3D Backbone: Paddle Video",
    "/paddlevideo/modeling/backbones/swin_transformer.py:605-627": "Swin Transformer Initialization Parameters",
    "/paddlevideo/modeling/backbones/swin_transformer.py:628-659": "Swin Transformer Model Initialization",
    "/paddlevideo/modeling/backbones/swin_transformer.py:65-99": "Defining Swin Transformer Layer",
    "/paddlevideo/modeling/backbones/swin_transformer.py:660-687": "Swin Transformer Backbone Initialization",
    "/paddlevideo/modeling/backbones/swin_transformer.py:689-720": "Swin Transformer Initialization",
    "/paddlevideo/modeling/backbones/swin_transformer.py:721-742": "Swin Transformer Layer Processing",
    "/paddlevideo/modeling/backbones/toshift_vit.py": "Shift-ViT: Versatile Image Processing Backbone",
    "/paddlevideo/modeling/backbones/toshift_vit.py:1-37": "Shifted Vision Transformer Backbone",
    "/paddlevideo/modeling/backbones/toshift_vit.py:105-138": "Self-Attention Module: TOShift-ViT Class",
    "/paddlevideo/modeling/backbones/toshift_vit.py:139-164": "Object Initialization in Toshift_VIT Model",
    "/paddlevideo/modeling/backbones/toshift_vit.py:165-186": "Temporal Attention Initialization",
    "/paddlevideo/modeling/backbones/toshift_vit.py:187-213": "Token-Shifting ViT Model Initialization",
    "/paddlevideo/modeling/backbones/toshift_vit.py:214-245": "ToshiftVIT: Custom Backbone for Vision Transformer Model",
    "/paddlevideo/modeling/backbones/toshift_vit.py:246-278": "TokenShift Vision Transformer Class",
    "/paddlevideo/modeling/backbones/toshift_vit.py:279-305": "Toshift ViT Class Initialization",
    "/paddlevideo/modeling/backbones/toshift_vit.py:306-330": "Transformer Backbone Model Setup",
    "/paddlevideo/modeling/backbones/toshift_vit.py:331-360": "Toshift_VIT Model Initialization",
    "/paddlevideo/modeling/backbones/toshift_vit.py:361-386": "TOShiftViT: Initializing and Processing Features",
    "/paddlevideo/modeling/backbones/toshift_vit.py:38-65": "Stochastic Depth Drop Path Implementation",
    "/paddlevideo/modeling/backbones/toshift_vit.py:387-413": "Positional Embedding and Attention Blocks",
    "/paddlevideo/modeling/backbones/toshift_vit.py:66-104": "Self-Attention Mechanism Implementation",
    "/paddlevideo/modeling/backbones/transnetv2.py": "OctConv3D Enhances TransNetV2 Backbone",
    "/paddlevideo/modeling/backbones/transnetv2.py:1-28": "OctConv3D Layer Creation",
    "/paddlevideo/modeling/backbones/transnetv2.py:105-131": "TransnetV2: Configurable Conv3D Backbone",
    "/paddlevideo/modeling/backbones/transnetv2.py:132-150": "TransNetV2 Model Definition",
    "/paddlevideo/modeling/backbones/transnetv2.py:151-179": "Stacked DDCNNV2: Neural Network Layer",
    "/paddlevideo/modeling/backbones/transnetv2.py:181-207": "TransNetV2 Backbone Initialization",
    "/paddlevideo/modeling/backbones/transnetv2.py:208-232": "Stochastic Depth ResNet Block",
    "/paddlevideo/modeling/backbones/transnetv2.py:234-260": "TransNetV2 Layer Sequence",
    "/paddlevideo/modeling/backbones/transnetv2.py:261-282": "TransNetV2 Backbone Initialization",
    "/paddlevideo/modeling/backbones/transnetv2.py:283-307": "FrameSimilarity Layer Initialization",
    "/paddlevideo/modeling/backbones/transnetv2.py:30-43": "Interleaved 3D Convolutional Paths for TransNetV2",
    "/paddlevideo/modeling/backbones/transnetv2.py:309-330": "TransNetV2 Model Initialization and Similarity Calculation",
    "/paddlevideo/modeling/backbones/transnetv2.py:331-346": "Tensor Indices and Regression",
    "/paddlevideo/modeling/backbones/transnetv2.py:347-364": "TransNetV2 Conv3D Model",
    "/paddlevideo/modeling/backbones/transnetv2.py:365-390": "TransnetV2 Frame Concatenation",
    "/paddlevideo/modeling/backbones/transnetv2.py:391-411": "Color Histograms in TransnetV2",
    "/paddlevideo/modeling/backbones/transnetv2.py:412-429": "Video Frame Histogram Comparison",
    "/paddlevideo/modeling/backbones/transnetv2.py:430-446": "TransNetV2 Lookup Operation",
    "/paddlevideo/modeling/backbones/transnetv2.py:44-58": "TransNetV2: Conv, Upsample, Downsample Backbone",
    "/paddlevideo/modeling/backbones/transnetv2.py:449-473": "TransNetV2: Shot Transition Detection Model",
    "/paddlevideo/modeling/backbones/transnetv2.py:473-484": "TransNetV2 ResNet Features Initialization",
    "/paddlevideo/modeling/backbones/transnetv2.py:485-508": "TransNetv2 Backbone Initialization",
    "/paddlevideo/modeling/backbones/transnetv2.py:510-526": "TransNetV2 Neural Network Model Initialization",
    "/paddlevideo/modeling/backbones/transnetv2.py:527-548": "TransNetV2 Model Architecture",
    "/paddlevideo/modeling/backbones/transnetv2.py:549-571": "TransNetV2 Feature Extraction and Pooling",
    "/paddlevideo/modeling/backbones/transnetv2.py:572-581": "Transnetv2 Classification",
    "/paddlevideo/modeling/backbones/transnetv2.py:60-90": "TransNetV2: Versatile Transformation Functions",
    "/paddlevideo/modeling/backbones/transnetv2.py:91-104": "TransNetV2 Backbone Conv Layers",
    "/paddlevideo/modeling/backbones/vit.py": "Vision Transformer Backbone in PaddleVideo",
    "/paddlevideo/modeling/backbones/vit.py:1-37": "Drop Path Functions in PaddleVideo",
    "/paddlevideo/modeling/backbones/vit.py:105-138": "Multi-Head Attention Layer Initialization",
    "/paddlevideo/modeling/backbones/vit.py:139-166": "Vision Transformer Initializer",
    "/paddlevideo/modeling/backbones/vit.py:167-185": "Vision Transformer Backbone Initialization",
    "/paddlevideo/modeling/backbones/vit.py:186-210": "VI Forward Method",
    "/paddlevideo/modeling/backbones/vit.py:211-235": "Spatial Attention in Vision Transformer Model",
    "/paddlevideo/modeling/backbones/vit.py:236-267": "Vision Transformer Backbone: Averaging and Patch Embedding",
    "/paddlevideo/modeling/backbones/vit.py:268-298": "VisionTransformer: Paddle Video Backbone",
    "/paddlevideo/modeling/backbones/vit.py:299-327": "Initialize ViT Backbone Model Parameters",
    "/paddlevideo/modeling/backbones/vit.py:328-350": "Initializing Vision Transformer Components",
    "/paddlevideo/modeling/backbones/vit.py:351-379": "Vision Transformer Model Initialization",
    "/paddlevideo/modeling/backbones/vit.py:38-65": "Stochastic Depth Dropout Paths for Vision Transformers",
    "/paddlevideo/modeling/backbones/vit.py:380-405": "Vision Transformer Forward Initialization",
    "/paddlevideo/modeling/backbones/vit.py:406-430": "Relative Position Embeddings in Vision Transformer Model",
    "/paddlevideo/modeling/backbones/vit.py:431-455": "VIT Time Embedding and Attention Processing",
    "/paddlevideo/modeling/backbones/vit.py:456-465": "Vit Model Frame Averaging Embeddings",
    "/paddlevideo/modeling/backbones/vit.py:66-104": "Vision Transformer Backbone: MLP & Attention",
    "/paddlevideo/modeling/backbones/vit_tweaks.py": "VisionTransformer_tweaks: Time-Based Feature Modification",
    "/paddlevideo/modeling/backbones/vit_tweaks.py:1-32": "VisionTransformer_tweaks Model",
    "/paddlevideo/modeling/backbones/vit_tweaks.py:108-144": "Multi-Head Self-Attention Layer for Transformers",
    "/paddlevideo/modeling/backbones/vit_tweaks.py:145-178": "Attention Block Class with QKV Decomposition",
    "/paddlevideo/modeling/backbones/vit_tweaks.py:179-202": "Dynamic Norm Layer Instantiation",
    "/paddlevideo/modeling/backbones/vit_tweaks.py:203-221": "Temporal Attention Module Initialization",
    "/paddlevideo/modeling/backbones/vit_tweaks.py:223-247": "Flexible ViT Backbone with MLP and Attention Types",
    "/paddlevideo/modeling/backbones/vit_tweaks.py:248-271": "Spatial Attention in ViT Models",
    "/paddlevideo/modeling/backbones/vit_tweaks.py:273-302": "PatchEmbed Class in PaddleVideo Library",
    "/paddlevideo/modeling/backbones/vit_tweaks.py:303-331": "Vision Transformer with Patch Input",
    "/paddlevideo/modeling/backbones/vit_tweaks.py:332-360": "Vit Model Initialization",
    "/paddlevideo/modeling/backbones/vit_tweaks.py:35-69": "Dropout and Bounding Box Functions",
    "/paddlevideo/modeling/backbones/vit_tweaks.py:361-384": "Initializing Transformer Embeddings",
    "/paddlevideo/modeling/backbones/vit_tweaks.py:385-414": "Transformer Model Customization",
    "/paddlevideo/modeling/backbones/vit_tweaks.py:415-441": "Initializing Backbone Network Parameters",
    "/paddlevideo/modeling/backbones/vit_tweaks.py:442-464": "Transformer Model Forward Pass: Positional Embedding Reshaping",
    "/paddlevideo/modeling/backbones/vit_tweaks.py:465-487": "Vit Tweaks: Position & Time Embeddings",
    "/paddlevideo/modeling/backbones/vit_tweaks.py:488-515": "Dynamic Frame Averaging for Vision Transformers",
    "/paddlevideo/modeling/backbones/vit_tweaks.py:70-107": "Vit Tweak: Mlp Class with DropPath",
    "/paddlevideo/modeling/backbones/yowo.py": "YOWO Video Backbone for Paddle",
    "/paddlevideo/modeling/backbones/yowo.py:1-28": "CAM Module: PaddleVideo Backbone Custom Layer",
    "/paddlevideo/modeling/backbones/yowo.py:109-129": "YOLOv5 Backbone Loading Weights",
    "/paddlevideo/modeling/backbones/yowo.py:130-150": "YOWO Model Loading and Processing",
    "/paddlevideo/modeling/backbones/yowo.py:29-53": "Channel-wise Attention CFAMPBlock",
    "/paddlevideo/modeling/backbones/yowo.py:54-79": "YOWO Backbone: ConvLayers, BN, ReLU, CAM_Module",
    "/paddlevideo/modeling/backbones/yowo.py:80-108": "YOWO Model Initialization",
    "/paddlevideo/modeling/bbox_utils.py": "Bounding Box Utilities",
    "/paddlevideo/modeling/bbox_utils.py:1-30": "Bounding Box Delta Calculator",
    "/paddlevideo/modeling/bbox_utils.py:103-139": "Bounding Boxes Filters and Overlaps Calculation",
    "/paddlevideo/modeling/bbox_utils.py:140-176": "Grid and YOLO Box Utilities",
    "/paddlevideo/modeling/bbox_utils.py:177-204": "Bounding Box Utilities",
    "/paddlevideo/modeling/bbox_utils.py:205-237": "Bounding Box IoU Calculator",
    "/paddlevideo/modeling/bbox_utils.py:238-268": "Intersection Over Union Calculator for Bounding Boxes",
    "/paddlevideo/modeling/bbox_utils.py:269-304": "Rotated Bounding Box Conversion",
    "/paddlevideo/modeling/bbox_utils.py:305-339": "Bounding Box Regression Computation",
    "/paddlevideo/modeling/bbox_utils.py:31-63": "Weighted Bounding Box Differential Conversion",
    "/paddlevideo/modeling/bbox_utils.py:340-378": "Delta BBox Calculator",
    "/paddlevideo/modeling/bbox_utils.py:379-417": "Decoding Bounding Boxes in Paddle Video",
    "/paddlevideo/modeling/bbox_utils.py:418-447": "Bounding Box Dimensions and Angle Calculator",
    "/paddlevideo/modeling/bbox_utils.py:448-475": "Find Best Begin Point in Coordinates",
    "/paddlevideo/modeling/bbox_utils.py:476-503": "Rotated Rectangle to Polygon Conversion",
    "/paddlevideo/modeling/bbox_utils.py:504-528": "Rotating Rectangles to Polygons",
    "/paddlevideo/modeling/bbox_utils.py:65-102": "Bounding Box Utilities",
    "/paddlevideo/modeling/builder.py": "Video Model Builder with Paddle",
    "/paddlevideo/modeling/builder.py:1-19": "Video Object Detection Model Builder",
    "/paddlevideo/modeling/builder.py:117-127": "Framework-Based Model Builder",
    "/paddlevideo/modeling/builder.py:22-73": "Model Builder Functions",
    "/paddlevideo/modeling/builder.py:74-116": "Dynamically Building Paddle Video Components",
    "/paddlevideo/modeling/framework/__init__.py": "PaddleVideo Framework Base Classes",
    "/paddlevideo/modeling/framework/__init__.py:1-24": "PaddleVideo Framework Base Classes",
    "/paddlevideo/modeling/framework/__init__.py:25-28": "Model Classes in PaddleVideo Framework",
    "/paddlevideo/modeling/framework/detectors/__init__.py": "Detector Imports in PaddleVideo",
    "/paddlevideo/modeling/framework/detectors/base.py": "Abstract BaseDetector Class",
    "/paddlevideo/modeling/framework/detectors/base.py:1-36": "Base Detector Class: Foundation for Detection Models",
    "/paddlevideo/modeling/framework/detectors/base.py:37-51": "Abstract Base Classes for ML Training, Validation, and Testing",
    "/paddlevideo/modeling/framework/detectors/fast_rcnn.py": "Fast R-CNN Detector",
    "/paddlevideo/modeling/framework/detectors/fast_rcnn.py:1-30": "Fast R-CNN Detector",
    "/paddlevideo/modeling/framework/detectors/fast_rcnn.py:31-34": "Fast RCNN Detector Builder",
    "/paddlevideo/modeling/framework/detectors/two_stage.py": "Two-Stage Slowfast Detector",
    "/paddlevideo/modeling/framework/detectors/two_stage.py:1-32": "Two-Stage Detector Base Class",
    "/paddlevideo/modeling/framework/detectors/two_stage.py:125-152": "Two-Stage Detector Data Retrieval",
    "/paddlevideo/modeling/framework/detectors/two_stage.py:153-176": "Two-Stage Detector: GT Bounding Boxes Generation",
    "/paddlevideo/modeling/framework/detectors/two_stage.py:178-186": "Selecting Entity IDs with Paddle's Index Select",
    "/paddlevideo/modeling/framework/detectors/two_stage.py:33-64": "Two-Stage Object Detector Class",
    "/paddlevideo/modeling/framework/detectors/two_stage.py:66-91": "Two-Stage Detector Feature Extraction and Loss Computation",
    "/paddlevideo/modeling/framework/detectors/two_stage.py:92-124": "SlowFast Model Detectors: Val, Test, Infer",
    "/paddlevideo/modeling/framework/estimators/__init__.py": "Estimators Import and Definition",
    "/paddlevideo/modeling/framework/estimators/base.py": "PaddleVideo BaseEstimator Class",
    "/paddlevideo/modeling/framework/estimators/base.py:1-34": "BaseEstimator: PaddleVideo's Estimator Foundation",
    "/paddlevideo/modeling/framework/estimators/base.py:35-66": "Versatile Estimator Framework",
    "/paddlevideo/modeling/framework/estimators/base.py:67-82": "Abstract Methods for Model Validation",
    "/paddlevideo/modeling/framework/estimators/depth_estimator.py": "DepthEstimator: Feature Extraction and Loss Metrics",
    "/paddlevideo/modeling/framework/estimators/depth_estimator.py:1-31": "DepthEstimator: Framework for Feature Extraction",
    "/paddlevideo/modeling/framework/estimators/depth_estimator.py:32-58": "Depth Estimator Steps: Train, Validate, Test, Infer",
    "/paddlevideo/modeling/framework/estimators/depth_estimator.py:59-59": "Depth Estimator Results",
    "/paddlevideo/modeling/framework/localizers/__init__.py": "PaddleVideo Localizers: Handling Video Localization Tasks",
    "/paddlevideo/modeling/framework/localizers/base.py": "Localization Model Base Class (Python)",
    "/paddlevideo/modeling/framework/localizers/base.py:1-27": "Base Class for Localization Models",
    "/paddlevideo/modeling/framework/localizers/base.py:28-56": "Localizer Model Initialization",
    "/paddlevideo/modeling/framework/localizers/base.py:58-74": "Abstract Classes for Model Steps",
    "/paddlevideo/modeling/framework/localizers/bmn_localizer.py": "BMN Localizer Model for PaddleVideo",
    "/paddlevideo/modeling/framework/localizers/bmn_localizer.py:1-36": "BMNLocalizer: PaddleVideo's Localization Framework",
    "/paddlevideo/modeling/framework/localizers/bmn_localizer.py:37-69": "BMN Localizer: Training, Testing, Inferring",
    "/paddlevideo/modeling/framework/localizers/yowo_localizer.py": "YOWO Localizer Evaluation",
    "/paddlevideo/modeling/framework/localizers/yowo_localizer.py:1-33": "YOWO Localizer Class: PaddleVideo",
    "/paddlevideo/modeling/framework/localizers/yowo_localizer.py:126-147": "YOWO Localizer Evaluation: Precision, Recall, F-Score",
    "/paddlevideo/modeling/framework/localizers/yowo_localizer.py:149-161": "YOWO Localizer Functions",
    "/paddlevideo/modeling/framework/localizers/yowo_localizer.py:34-67": "Model Training and Validation Process",
    "/paddlevideo/modeling/framework/localizers/yowo_localizer.py:68-90": "Non-Maximum Suppression and Precision Calculation",
    "/paddlevideo/modeling/framework/localizers/yowo_localizer.py:91-125": "YOLOv3 Localizer Metrics Calculator",
    "/paddlevideo/modeling/framework/localizers/yowo_utils.py": "YOWO Utils: Non-Max Suppression and Tensor Movement",
    "/paddlevideo/modeling/framework/localizers/yowo_utils.py:1-36": "YOWO Localizers: Truths Length & NMS",
    "/paddlevideo/modeling/framework/localizers/yowo_utils.py:123-153": "YOLO Bounding Box Extractor",
    "/paddlevideo/modeling/framework/localizers/yowo_utils.py:154-178": "YOLO Object Detection Utilities",
    "/paddlevideo/modeling/framework/localizers/yowo_utils.py:179-213": "Intersection-Over-Union Calculator",
    "/paddlevideo/modeling/framework/localizers/yowo_utils.py:214-241": "Intersection Over Union Code",
    "/paddlevideo/modeling/framework/localizers/yowo_utils.py:244-268": "YOLO Localizer Ground Truth Builder",
    "/paddlevideo/modeling/framework/localizers/yowo_utils.py:269-288": "IoU Calculation for YoWo Localizers",
    "/paddlevideo/modeling/framework/localizers/yowo_utils.py:289-315": "IoU-Based Masking for Bounding Box Confidences",
    "/paddlevideo/modeling/framework/localizers/yowo_utils.py:316-338": "YOLO Anchor Box Selection",
    "/paddlevideo/modeling/framework/localizers/yowo_utils.py:340-357": "Object Localization Metric",
    "/paddlevideo/modeling/framework/localizers/yowo_utils.py:358-359": "Localizers Framework Functions",
    "/paddlevideo/modeling/framework/localizers/yowo_utils.py:37-67": "Functional Definitions for Bounding Boxes",
    "/paddlevideo/modeling/framework/localizers/yowo_utils.py:68-94": "Box Regression via Reshaping and Sigmoid",
    "/paddlevideo/modeling/framework/localizers/yowo_utils.py:96-122": "YOLOv2 Bounding Box Processing",
    "/paddlevideo/modeling/framework/multimodal/__init__.py": "Multimodal Model Initialization",
    "/paddlevideo/modeling/framework/multimodal/actbert.py": "Introducing ActBert: Multimodal Model Training",
    "/paddlevideo/modeling/framework/multimodal/actbert.py:1-27": "ActBert: Multimodal Model Framework",
    "/paddlevideo/modeling/framework/multimodal/actbert.py:28-46": "ActBert Dataset Train and Val Steps",
    "/paddlevideo/modeling/framework/multimodal/actbert.py:47-64": "Multimodal ACT-BERT Model",
    "/paddlevideo/modeling/framework/multimodal/base.py": "Multimodal Base Class for PaddleVideo",
    "/paddlevideo/modeling/framework/multimodal/base.py:1-32": "Multimodal Base Class for PaddleVideo",
    "/paddlevideo/modeling/framework/multimodal/base.py:33-63": "Multimodal Base Class with Selectable Step Functions",
    "/paddlevideo/modeling/framework/multimodal/base.py:65-81": "Abstract Methods for Validation, Testing, and Inference",
    "/paddlevideo/modeling/framework/partitioners/__init__.py": "PaddleVideo Partitioner Initialization",
    "/paddlevideo/modeling/framework/partitioners/base.py": "BaseModelPartitioner: PaddleVideo's Modeling Framework",
    "/paddlevideo/modeling/framework/partitioners/base.py:1-27": "Python Base Partitioner Class for PaddleVideo",
    "/paddlevideo/modeling/framework/partitioners/base.py:28-55": "Partitioned Model Initialization",
    "/paddlevideo/modeling/framework/partitioners/base.py:56-84": "Base Model Partitioner Class",
    "/paddlevideo/modeling/framework/partitioners/transnetv2_partitioner.py": "TransNetV2 Partitioner in PaddleVideo",
    "/paddlevideo/modeling/framework/partitioners/transnetv2_partitioner.py:1-32": "TransNetV2 Partitioner for PaddleVideo",
    "/paddlevideo/modeling/framework/partitioners/transnetv2_partitioner.py:33-54": "TransNetV2 Partitioner Loss Metrics",
    "/paddlevideo/modeling/framework/partitioners/transnetv2_partitioner.py:55-68": "TransnetV2 Partitioner Methods",
    "/paddlevideo/modeling/framework/recognizers/__init__.py": "PaddleVideo Recognizers: Action & Motion",
    "/paddlevideo/modeling/framework/recognizers/__init__.py:1-23": "PaddleVideo Recognizers: A Versatile Toolkit",
    "/paddlevideo/modeling/framework/recognizers/__init__.py:25-30": "PaddleVideo Recognizer Models",
    "/paddlevideo/modeling/framework/recognizers/base.py": "Base Recognizer Model in PaddleVideo",
    "/paddlevideo/modeling/framework/recognizers/base.py:1-33": "Base Recognizer Class: Override Train, Valid, Test Steps",
    "/paddlevideo/modeling/framework/recognizers/base.py:34-66": "Initialize and Train Model's Head",
    "/paddlevideo/modeling/framework/recognizers/base.py:67-81": "Abstract Base Recognizer Steps in PaddleVideo",
    "/paddlevideo/modeling/framework/recognizers/recognizer1d.py": "1D Recognizer Model in PaddleVideo",
    "/paddlevideo/modeling/framework/recognizers/recognizer1d.py:1-29": "1D Recognizer Model Framework in PaddleVideo",
    "/paddlevideo/modeling/framework/recognizers/recognizer1d.py:30-61": "1D Recognizer Model Processing Image and Audio Data",
    "/paddlevideo/modeling/framework/recognizers/recognizer1d.py:62-91": "1D Recognizer Model Framework",
    "/paddlevideo/modeling/framework/recognizers/recognizer1d.py:93-111": "Shared Implementation in Validating, Testing, and Inferring Steps",
    "/paddlevideo/modeling/framework/recognizers/recognizer2d.py": "2D Video Recognizer in PaddleVideo",
    "/paddlevideo/modeling/framework/recognizers/recognizer2d.py:1-27": "2D Recognizer Model Framework in PaddleVideo",
    "/paddlevideo/modeling/framework/recognizers/recognizer2d.py:28-60": "Video Analysis Recognizer2D Model",
    "/paddlevideo/modeling/framework/recognizers/recognizer2d.py:60-69": "Recognizer2D Class and Methods: Forward Net and Infer Step",
    "/paddlevideo/modeling/framework/recognizers/recognizer3d.py": "Recognizer3D: 3D Object Recognition Framework",
    "/paddlevideo/modeling/framework/recognizers/recognizer3d.py:1-33": "3D Recognizer Framework in PaddleVideo",
    "/paddlevideo/modeling/framework/recognizers/recognizer3d.py:34-64": "Training and Validation Steps in 3D Recognizer Model",
    "/paddlevideo/modeling/framework/recognizers/recognizer3d.py:66-93": "Reshape Input for ResNet3dSlowOnly",
    "/paddlevideo/modeling/framework/recognizers/recognizer3dMRI.py": "3D Recognizer Model in PaddleVideo",
    "/paddlevideo/modeling/framework/recognizers/recognizer3dMRI.py:1-31": "3D MRI Recognizer Framework",
    "/paddlevideo/modeling/framework/recognizers/recognizer3dMRI.py:32-65": "3D MRI Recognizer Model Training and Testing",
    "/paddlevideo/modeling/framework/recognizers/recognizer3dMRI.py:66-81": "Dual Test/Infer Steps in Recognizer3D MRI Model",
    "/paddlevideo/modeling/framework/recognizers/recognizerDistillation.py": "Recognizer Distillation in PaddleVideo",
    "/paddlevideo/modeling/framework/recognizers/recognizerDistillation.py:1-34": "Recognizer Distillation Layer for PaddleVideo",
    "/paddlevideo/modeling/framework/recognizers/recognizerDistillation.py:116-136": "Distillation Recognizer Loss Calculation",
    "/paddlevideo/modeling/framework/recognizers/recognizerDistillation.py:137-165": "Training Step and Recognizer Distillation",
    "/paddlevideo/modeling/framework/recognizers/recognizerDistillation.py:167-193": "Distillation Recognizer Class",
    "/paddlevideo/modeling/framework/recognizers/recognizerDistillation.py:195-224": "Evaluating Student Model in Image Recognition",
    "/paddlevideo/modeling/framework/recognizers/recognizerDistillation.py:225-231": "Selecting and Applying Model",
    "/paddlevideo/modeling/framework/recognizers/recognizerDistillation.py:35-60": "Distillation Model Initialization",
    "/paddlevideo/modeling/framework/recognizers/recognizerDistillation.py:61-85": "Distillation Recognizer Model Initialization",
    "/paddlevideo/modeling/framework/recognizers/recognizerDistillation.py:86-114": "Distillation Recognizer Framework",
    "/paddlevideo/modeling/framework/recognizers/recognizerMRI.py": "2D Image Classifier with PaddleVideo's RecognizerMRI",
    "/paddlevideo/modeling/framework/recognizers/recognizerMRI.py:1-27": "PaddleVideo: RecognizerMRI Framework",
    "/paddlevideo/modeling/framework/recognizers/recognizerMRI.py:28-59": "Image Classification Model Definition",
    "/paddlevideo/modeling/framework/recognizers/recognizerMRI.py:60-76": "Testing Steps without Head Loss"
}
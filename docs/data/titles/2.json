{
    "/applications/Ma-Net/README.md:1-35": "Ma-Net: PaddleVideo's CVPR2020 Implementation",
    "/applications/Ma-Net/README.md:36-47": "Run Local Environment Script",
    "/applications/Ma-Net/README_cn.md": "Ma-Net视频分割实现README（中文）",
    "/applications/Ma-Net/config.py": "Ma-Net Training Setup",
    "/applications/Ma-Net/config.py:1-32": "Configuring Ma-Net Parameters",
    "/applications/Ma-Net/config.py:33-53": "Ma-Net App Config: CLI Arguments",
    "/applications/Ma-Net/config.py:54-70": "Ma-Net Model Configuration",
    "/applications/Ma-Net/config.py:71-88": "Ma-Net Configuration Arguments",
    "/applications/Ma-Net/config.py:90-96": "Default Initialization and Epoch Calculation",
    "/applications/Ma-Net/dataloaders/DAVIS2017.md": "DAVIS2017 Dataset Download and Setup",
    "/applications/Ma-Net/dataloaders/DAVIS2017_cn.md": "DAVIS2017 Dataset for Ma-Net",
    "/applications/Ma-Net/dataloaders/custom_transforms_f.py": "Data Augmentation for Video Object Detection",
    "/applications/Ma-Net/dataloaders/custom_transforms_f.py:1-35": "Uniform Image Rescaling Class",
    "/applications/Ma-Net/dataloaders/custom_transforms_f.py:125-154": "ScaleNRotate Class for Image Transformations",
    "/applications/Ma-Net/dataloaders/custom_transforms_f.py:155-189": "Random Scaling, Rotation, and Warping Transform",
    "/applications/Ma-Net/dataloaders/custom_transforms_f.py:191-229": "Data Augmentation Techniques in Ma-Net",
    "/applications/Ma-Net/dataloaders/custom_transforms_f.py:230-261": "Normalizing and Initializing Custom Scribble Interaction",
    "/applications/Ma-Net/dataloaders/custom_transforms_f.py:262-288": "Scribble Segmentation with Bresenham",
    "/applications/Ma-Net/dataloaders/custom_transforms_f.py:289-310": "Generating GT Masks from Scribbles",
    "/applications/Ma-Net/dataloaders/custom_transforms_f.py:312-330": "Dilated Mask Annotation Rounds Computation",
    "/applications/Ma-Net/dataloaders/custom_transforms_f.py:331-366": "Ma-Net Data Loader: Video OD Transform",
    "/applications/Ma-Net/dataloaders/custom_transforms_f.py:36-69": "Custom Image Resizer Transform",
    "/applications/Ma-Net/dataloaders/custom_transforms_f.py:369-405": "Edge Mask Generation in Ma-Net Dataloader",
    "/applications/Ma-Net/dataloaders/custom_transforms_f.py:406-416": "Edge Mask Creation with Parsing Mask",
    "/applications/Ma-Net/dataloaders/custom_transforms_f.py:70-98": "Random Crop with Sufficient Scribble Elements",
    "/applications/Ma-Net/dataloaders/custom_transforms_f.py:99-124": "Adaptive Image Crop and Resize",
    "/applications/Ma-Net/dataloaders/davis_2017_f.py": "DAVIS 2017 Dataset Preprocessing for Ma-Net",
    "/applications/Ma-Net/dataloaders/davis_2017_f.py:1-40": "DAVIS 2017 Test Data Manager",
    "/applications/Ma-Net/dataloaders/davis_2017_f.py:110-135": "File Sequence Extension and Preprocessing",
    "/applications/Ma-Net/dataloaders/davis_2017_f.py:136-161": "DAVIS 2017 Dataset Loader Code",
    "/applications/Ma-Net/dataloaders/davis_2017_f.py:162-186": "Load Images and Labels from Path",
    "/applications/Ma-Net/dataloaders/davis_2017_f.py:187-219": "DAVIS 2017 Video Object Detection Data Loader",
    "/applications/Ma-Net/dataloaders/davis_2017_f.py:220-244": "DAVIS2017 Mask Reader and Dictionary Creation",
    "/applications/Ma-Net/dataloaders/davis_2017_f.py:246-273": "DAVIS 2017 Data Loader Initiation",
    "/applications/Ma-Net/dataloaders/davis_2017_f.py:274-299": "DAVIS 2017 Dataset Loader",
    "/applications/Ma-Net/dataloaders/davis_2017_f.py:300-320": "Davis Frame Processing: Loader",
    "/applications/Ma-Net/dataloaders/davis_2017_f.py:322-344": "Random Scribble Label Assigner",
    "/applications/Ma-Net/dataloaders/davis_2017_f.py:345-374": "Image Dataloader and Transform",
    "/applications/Ma-Net/dataloaders/davis_2017_f.py:375-400": "Data Loading Function for Sequence Lists",
    "/applications/Ma-Net/dataloaders/davis_2017_f.py:401-431": "DAVIS 2017 Dataset Class Definition",
    "/applications/Ma-Net/dataloaders/davis_2017_f.py:41-73": "DAVIS2017 Dataset Initialization and Loading",
    "/applications/Ma-Net/dataloaders/davis_2017_f.py:432-456": "DAVIS Dataset Custom Dataloader",
    "/applications/Ma-Net/dataloaders/davis_2017_f.py:457-485": "Custom Dataloader for Adjacent Frames",
    "/applications/Ma-Net/dataloaders/davis_2017_f.py:486-506": "Loading Data for Video Sequences",
    "/applications/Ma-Net/dataloaders/davis_2017_f.py:507-531": "Preparing DAVIS Dataset for Model",
    "/applications/Ma-Net/dataloaders/davis_2017_f.py:532-562": "Ma-Net Dataset Creator",
    "/applications/Ma-Net/dataloaders/davis_2017_f.py:563-585": "Update Frame and Scribble Masks in Dataset",
    "/applications/Ma-Net/dataloaders/davis_2017_f.py:586-610": "Random JSON Label Dataset Initialization",
    "/applications/Ma-Net/dataloaders/davis_2017_f.py:611-633": "JSON Parsing and Image Loading",
    "/applications/Ma-Net/dataloaders/davis_2017_f.py:634-662": "Validate Sequence Existence and Preprocess Data",
    "/applications/Ma-Net/dataloaders/davis_2017_f.py:664-672": "JSON Dataset Preprocessing",
    "/applications/Ma-Net/dataloaders/davis_2017_f.py:74-109": "DAVIS 2017 Semantic Segmentation Dataset Loader",
    "/applications/Ma-Net/dataloaders/helpers.py": "Functions for Tensor to Image Conversion and Model Naming",
    "/applications/Ma-Net/dataloaders/helpers.py:1-46": "Image Processing Helpers",
    "/applications/Ma-Net/dataloaders/helpers.py:47-78": "Model Name Construction and Image Computation Functions",
    "/applications/Ma-Net/dataloaders/helpers.py:79-81": "Enhancing Background with Dilation",
    "/applications/Ma-Net/dataloaders/samplers.py": "Random Identity Sampler",
    "/applications/Ma-Net/dataloaders/samplers.py:1-31": "RandomIdentitySampler Class",
    "/applications/Ma-Net/dataloaders/samplers.py:32-42": "Random Identity Sampler",
    "/applications/Ma-Net/networks/IntVOS.py": "Ma-Net: IntVOS Video Segmentation",
    "/applications/Ma-Net/networks/IntVOS.py:1-42": "Pairwise Distance Calculation in PaddlePaddle Video OD",
    "/applications/Ma-Net/networks/IntVOS.py:119-141": "KNN Search with Chunking",
    "/applications/Ma-Net/networks/IntVOS.py:142-169": "Nearest Neighbor Feature Computation",
    "/applications/Ma-Net/networks/IntVOS.py:170-186": "Nearest Neighbor Distance Calculation",
    "/applications/Ma-Net/networks/IntVOS.py:187-211": "Nearest Neighbor Features Calculation",
    "/applications/Ma-Net/networks/IntVOS.py:212-235": "Local Neighbor Feature Extraction",
    "/applications/Ma-Net/networks/IntVOS.py:236-261": "Boundary-Cross Correlation Sigmoid Transpose",
    "/applications/Ma-Net/networks/IntVOS.py:262-287": "Pairwise L2 Distances Calculator",
    "/applications/Ma-Net/networks/IntVOS.py:288-312": "Local Downsampling in IntVOS Network",
    "/applications/Ma-Net/networks/IntVOS.py:313-336": "Sliding Window Distance Calculator",
    "/applications/Ma-Net/networks/IntVOS.py:337-365": "Spatial Cross-Correlation Sampler",
    "/applications/Ma-Net/networks/IntVOS.py:366-392": "IntVOS Nearest Neighbor Compute Function",
    "/applications/Ma-Net/networks/IntVOS.py:393-421": "Nearest Neighbor Feature Calculation",
    "/applications/Ma-Net/networks/IntVOS.py:422-454": "Offset Masks and Distance Tensor Calculation",
    "/applications/Ma-Net/networks/IntVOS.py:43-65": "Pairwise Distance Calculator",
    "/applications/Ma-Net/networks/IntVOS.py:455-486": "Residual Block and Segmentation Head for Ma-Net",
    "/applications/Ma-Net/networks/IntVOS.py:487-513": "IntSegHead: Segmentation Neural Network",
    "/applications/Ma-Net/networks/IntVOS.py:516-537": "Separable Conv Layer with BatchNorm",
    "/applications/Ma-Net/networks/IntVOS.py:538-571": "Dynamic Segmentation Heads",
    "/applications/Ma-Net/networks/IntVOS.py:572-589": "Initializing Network Architecture Components",
    "/applications/Ma-Net/networks/IntVOS.py:590-616": "Dynamic Segmentation Network Forward Pass",
    "/applications/Ma-Net/networks/IntVOS.py:617-640": "Splitting Input, Calling prop_seghead",
    "/applications/Ma-Net/networks/IntVOS.py:641-664": "IntVOS Feature Extraction",
    "/applications/Ma-Net/networks/IntVOS.py:66-88": "K-Nearest Neighbor Search with Padding Distance",
    "/applications/Ma-Net/networks/IntVOS.py:665-685": "Interpolated Feature Embedding Extraction",
    "/applications/Ma-Net/networks/IntVOS.py:686-704": "Extracting Nearest Neighbors per Object",
    "/applications/Ma-Net/networks/IntVOS.py:705-725": "Check and Update Global Map Embedding",
    "/applications/Ma-Net/networks/IntVOS.py:726-745": "Nearest Neighbor Feature Extraction for Video Sequences",
    "/applications/Ma-Net/networks/IntVOS.py:746-764": "Sequence Map Initialization and Updating",
    "/applications/Ma-Net/networks/IntVOS.py:765-781": "Updating Previous Frame Features",
    "/applications/Ma-Net/networks/IntVOS.py:782-803": "Frame Feature Handling and Concatenation",
    "/applications/Ma-Net/networks/IntVOS.py:804-829": "int_seghead Function Overview",
    "/applications/Ma-Net/networks/IntVOS.py:830-853": "Interpolating Ma-Net Scribble Labels",
    "/applications/Ma-Net/networks/IntVOS.py:854-877": "Updating Global and Local Maps: IntVOS.py:854-877",
    "/applications/Ma-Net/networks/IntVOS.py:878-897": "Updating Distance and Temporary Dictionaries",
    "/applications/Ma-Net/networks/IntVOS.py:89-118": "Nearest Neighbor Feature Calculation",
    "/applications/Ma-Net/networks/IntVOS.py:898-921": "Tensor Operations for Segmentation Model",
    "/applications/Ma-Net/networks/IntVOS.py:922-927": "Transposing Tensor and Storing in Dictionary",
    "/applications/Ma-Net/networks/aspp.py": "ASPP Module: ASPP Pyramid Pooling in Ma-Net",
    "/applications/Ma-Net/networks/aspp.py:1-34": "ASPP Module: Hierarchical Atrous Spatial Pooling",
    "/applications/Ma-Net/networks/aspp.py:35-66": "ASPP Class: Building ASPP Network Modules",
    "/applications/Ma-Net/networks/aspp.py:67-89": "ASPP Modules and Global Average Pooling Layer",
    "/applications/Ma-Net/networks/aspp.py:90-123": "ASPP Module in Ma-Net's CNN",
    "/applications/Ma-Net/networks/backbone/__init__.py": "Build Backbone Networks",
    "/applications/Ma-Net/networks/backbone/drn.py": "Deep Residual Networks in PaddlePaddle",
    "/applications/Ma-Net/networks/backbone/drn.py:1-29": "BasicBlock Class in DRN Network",
    "/applications/Ma-Net/networks/backbone/drn.py:104-130": "DRN Network: Convolutional and Pooling Architecture",
    "/applications/Ma-Net/networks/backbone/drn.py:131-147": "DRN Network Architecture",
    "/applications/Ma-Net/networks/backbone/drn.py:148-170": "Defining MA-Net Backbone Layers",
    "/applications/Ma-Net/networks/backbone/drn.py:171-193": "DRN Network Layer Construction",
    "/applications/Ma-Net/networks/backbone/drn.py:194-234": "Deep Residual Network Backbone Architecture",
    "/applications/Ma-Net/networks/backbone/drn.py:236-257": "DRN_A Class in Ma-Net Backbone",
    "/applications/Ma-Net/networks/backbone/drn.py:258-279": "Creating Layers with _make_layer",
    "/applications/Ma-Net/networks/backbone/drn.py:281-318": "DRN Model Functions in Ma-Net Backbone",
    "/applications/Ma-Net/networks/backbone/drn.py:30-65": "Residual Bottleneck Block",
    "/applications/Ma-Net/networks/backbone/drn.py:319-349": "Initializing DRN Models with Pre-Trained Weights",
    "/applications/Ma-Net/networks/backbone/drn.py:350-380": "DRN Model Functions with Configurations",
    "/applications/Ma-Net/networks/backbone/drn.py:381-400": "DRN Model Definition and Pretrained Weights Loading",
    "/applications/Ma-Net/networks/backbone/drn.py:66-103": "Deep Residual Network Model",
    "/applications/Ma-Net/networks/backbone/mobilenet.py": "Ma-Net: MobileNetV2 Backbone Initialization",
    "/applications/Ma-Net/networks/backbone/mobilenet.py:1-33": "MobileNet Network Layer Definition",
    "/applications/Ma-Net/networks/backbone/mobilenet.py:100-127": "MobileNet Backbone for Ma-Net Application",
    "/applications/Ma-Net/networks/backbone/mobilenet.py:128-157": "Preparing MobileNet Backbone for Feature Extraction",
    "/applications/Ma-Net/networks/backbone/mobilenet.py:158-163": "Kaiming Normal Init and Batch Norm for Mobilenet",
    "/applications/Ma-Net/networks/backbone/mobilenet.py:34-63": "MobileNet Layer Creation: Convolutional Neural Network",
    "/applications/Ma-Net/networks/backbone/mobilenet.py:64-99": "MobileNetV2 Model Definition",
    "/applications/Ma-Net/networks/backbone/resnet.py": "ResNet Architecture with Batch Normalization",
    "/applications/Ma-Net/networks/backbone/resnet.py:1-33": "Bottleneck ResNet Backbone Definition",
    "/applications/Ma-Net/networks/backbone/resnet.py:104-126": "ResNet Network with Batch Normalization",
    "/applications/Ma-Net/networks/backbone/resnet.py:127-157": "ResNet Block Builder Function",
    "/applications/Ma-Net/networks/backbone/resnet.py:158-186": "ResNet Residual Block Builder",
    "/applications/Ma-Net/networks/backbone/resnet.py:187-220": "ResNet Network Definition",
    "/applications/Ma-Net/networks/backbone/resnet.py:221-239": "ResNet-101 Model Function",
    "/applications/Ma-Net/networks/backbone/resnet.py:34-77": "ResNet Architecture Design: BatchNorm, ReLU, Downsample",
    "/applications/Ma-Net/networks/backbone/resnet.py:78-103": "Initializing ResNet Backbone: Conv, BN, Pool and Residual Blocks",
    "/applications/Ma-Net/networks/backbone/xception.py": "AlignedXception Backbone for Image Classification",
    "/applications/Ma-Net/networks/backbone/xception.py:1-34": "Separable Conv Layer with BatchNorm",
    "/applications/Ma-Net/networks/backbone/xception.py:103-144": "AlignedXception Network Code",
    "/applications/Ma-Net/networks/backbone/xception.py:145-175": "AlignedXception Initialization Code",
    "/applications/Ma-Net/networks/backbone/xception.py:176-201": "Xception Backbone: Block Architecture",
    "/applications/Ma-Net/networks/backbone/xception.py:202-225": "Xception Block Creation and Implementation",
    "/applications/Ma-Net/networks/backbone/xception.py:226-249": "Repeated Convolutions and Batch Normalization in Xception",
    "/applications/Ma-Net/networks/backbone/xception.py:250-273": "Xception Convolutions and Block Initialization",
    "/applications/Ma-Net/networks/backbone/xception.py:274-297": "Xception Blocks in Ma-Net's Image Classification",
    "/applications/Ma-Net/networks/backbone/xception.py:298-323": "Xception Block Configurations",
    "/applications/Ma-Net/networks/backbone/xception.py:324-348": "Xception: Separable Conv Layers",
    "/applications/Ma-Net/networks/backbone/xception.py:349-390": "Xception Network Architecture",
    "/applications/Ma-Net/networks/backbone/xception.py:35-67": "Xception Block Layer Initialization and Forward",
    "/applications/Ma-Net/networks/backbone/xception.py:391-427": "Xception Model: Neural Network for Image Classification",
    "/applications/Ma-Net/networks/backbone/xception.py:429-447": "Updating Pre-trained Xception Model Weights",
    "/applications/Ma-Net/networks/backbone/xception.py:448-455": "Renaming Conv and BN Parameters",
    "/applications/Ma-Net/networks/backbone/xception.py:68-102": "Xception Backbone Network Creation",
    "/applications/Ma-Net/networks/decoder.py": "Decoder Network Construction",
    "/applications/Ma-Net/networks/decoder.py:1-32": "Decoder Layer for Feature Classification",
    "/applications/Ma-Net/networks/decoder.py:33-62": "Decoder Network Architecture",
    "/applications/Ma-Net/networks/decoder.py:65-66": "Build Decoder Network Function",
    "/applications/Ma-Net/networks/deeplab.py": "Freezing Batch Norm Layers in DeepLab",
    "/applications/Ma-Net/networks/deeplab.py:1-31": "Frozen Batch Normalization for DeepLab",
    "/applications/Ma-Net/networks/deeplab.py:32-64": "DeepLab Class Definition",
    "/applications/Ma-Net/networks/deeplab.py:65-81": "Get ConvBN Layers' Parameters",
    "/applications/Ma-Net/networks/loss.py": "Custom Loss Function for Image Classification",
    "/applications/Ma-Net/networks/loss.py:1-28": "Custom BCE Loss Function",
    "/applications/Ma-Net/networks/loss.py:110-130": "Hard Example Mining Loss Function",
    "/applications/Ma-Net/networks/loss.py:131-148": "Weighted Hard Example Mining Loss",
    "/applications/Ma-Net/networks/loss.py:149-153": "Top-k Mean Loss Calculation",
    "/applications/Ma-Net/networks/loss.py:29-44": "Hard Example Mining Loss",
    "/applications/Ma-Net/networks/loss.py:45-67": "Custom Loss Function with Hard Example Mining",
    "/applications/Ma-Net/networks/loss.py:68-87": "Top K Percent Pixel Loss",
    "/applications/Ma-Net/networks/loss.py:88-109": "Hard Example Mining and Top-k Pixel Selection Loss",
    "/applications/Ma-Net/run.sh": "DeeplabV3_coco DAVIS Dataset Training and Testing",
    "/applications/Ma-Net/run.sh:1-13": "Train DeeplabV3 on DAVIS Dataset",
    "/applications/Ma-Net/run.sh:13-15": "Testing Video Object Segmentation",
    "/applications/Ma-Net/test.py": "DAVIS2017 Video Object Detection with PaddlePaddle",
    "/applications/Ma-Net/test.py:1-39": "Data Preprocessing for DAVIS2017",
    "/applications/Ma-Net/test.py:115-139": "Scribble Sequence Retrieval and Memory Initialization",
    "/applications/Ma-Net/test.py:140-163": "Interaction Detection Code: File Writing and Embedding",
    "/applications/Ma-Net/test.py:164-182": "Extracting and Concatenating Embeddings",
    "/applications/Ma-Net/test.py:183-203": "Scribble Labeling in Ma-Net",
    "/applications/Ma-Net/test.py:204-224": "Save Scribble Image with Palette",
    "/applications/Ma-Net/test.py:226-244": "Segmentation Model Initialization",
    "/applications/Ma-Net/test.py:245-262": "Ma-Net Labeling: Predict, Resize, Max",
    "/applications/Ma-Net/test.py:263-279": "Save Interactive Video Frame as Labeled Image",
    "/applications/Ma-Net/test.py:280-298": "Video Object Segmentation Algorithm with Pre-trained Model",
    "/applications/Ma-Net/test.py:299-318": "Function Call with Multiple Args and Interpolation",
    "/applications/Ma-Net/test.py:320-338": "Image Saving for Prediction Labels",
    "/applications/Ma-Net/test.py:339-356": "Folder and Image Saving Reset",
    "/applications/Ma-Net/test.py:357-374": "Video Object Detection with PaddlePaddle's Prop Seghead",
    "/applications/Ma-Net/test.py:375-394": "Dynamic Object Detection and Classification",
    "/applications/Ma-Net/test.py:395-412": "Save Image in Directory Structure",
    "/applications/Ma-Net/test.py:40-62": "Video Analysis Configuration Loading",
    "/applications/Ma-Net/test.py:413-436": "Interactive Image Classification System",
    "/applications/Ma-Net/test.py:437-468": "Filtering Scribble Labels in Ma-Net",
    "/applications/Ma-Net/test.py:469-485": "75 Colors Palette Definition",
    "/applications/Ma-Net/test.py:486-498": "List of Sequential Numbers",
    "/applications/Ma-Net/test.py:499-511": "Incrementing Loop",
    "/applications/Ma-Net/test.py:512-525": "Enigmatic Numerical Sequence",
    "/applications/Ma-Net/test.py:63-87": "Preparing Image Dictionary for Model Training",
    "/applications/Ma-Net/test.py:88-113": "Interactive Session Initialization",
    "/applications/Ma-Net/train_stage1.py": "Ma-Net Video Detection Training",
    "/applications/Ma-Net/train_stage1.py:1-34": "Train Stage 1: Ma-Net Setup",
    "/applications/Ma-Net/train_stage1.py:116-144": "Model Resumption and Training",
    "/applications/Ma-Net/train_stage1.py:145-172": "Preparing Input Data for Model Training",
    "/applications/Ma-Net/train_stage1.py:173-194": "Initialize Label and Object Dictionaries",
    "/applications/Ma-Net/train_stage1.py:195-217": "Video Object Detection Model Training: Stages and Loss Functions",
    "/applications/Ma-Net/train_stage1.py:218-240": "Image Comparison and Normalization",
    "/applications/Ma-Net/train_stage1.py:241-266": "Sigmoid Binary Cross-Entropy Masks",
    "/applications/Ma-Net/train_stage1.py:267-286": "Loading and Preparing Test Datasets",
    "/applications/Ma-Net/train_stage1.py:287-306": "Paddle Data Loader for Test Samples",
    "/applications/Ma-Net/train_stage1.py:307-326": "Feature Extraction and Model Prediction",
    "/applications/Ma-Net/train_stage1.py:327-348": "Frame-by-frame Prediction Saving Function",
    "/applications/Ma-Net/train_stage1.py:349-378": "Training Ma-Net with Adaptive Learning Rate",
    "/applications/Ma-Net/train_stage1.py:35-59": "Training Ma-Net in Stage 1",
    "/applications/Ma-Net/train_stage1.py:379-391": "RGB Object Values List",
    "/applications/Ma-Net/train_stage1.py:392-404": "Sequence Numbers in Ma-Net's train_stage1.py",
    "/applications/Ma-Net/train_stage1.py:405-417": "Image Sequence Codes",
    "/applications/Ma-Net/train_stage1.py:418-429": "Training Manager's Code and Function Call",
    "/applications/Ma-Net/train_stage1.py:61-87": "Training Stage: Ma-Net Model Initiation",
    "/applications/Ma-Net/train_stage1.py:88-114": "Dataset Preparation and Training Setup",
    "/applications/Ma-Net/train_stage2.py": "Training Ma-Net Stage 2 with Learning Rates",
    "/applications/Ma-Net/train_stage2.py:1-34": "Initialize Environment for Training",
    "/applications/Ma-Net/train_stage2.py:120-145": "Ma-Net: Training Stage 2",
    "/applications/Ma-Net/train_stage2.py:146-170": "Model Resuming and Training Loop",
    "/applications/Ma-Net/train_stage2.py:171-191": "Dataset Initialization and Training Loop",
    "/applications/Ma-Net/train_stage2.py:192-212": "Training Stage 2: Setting Up Model and Feature Extraction",
    "/applications/Ma-Net/train_stage2.py:213-229": "Image Classification Code Snippet Initialization",
    "/applications/Ma-Net/train_stage2.py:230-247": "Initialize and Process Sequences",
    "/applications/Ma-Net/train_stage2.py:248-265": "Label and Object Dictionary Handling",
    "/applications/Ma-Net/train_stage2.py:266-287": "Training Stage 2: Updates and Visualizations",
    "/applications/Ma-Net/train_stage2.py:288-306": "Label and Prediction Visualization",
    "/applications/Ma-Net/train_stage2.py:307-324": "Segmenting Image with Binary Cross-Entropy",
    "/applications/Ma-Net/train_stage2.py:325-350": "Save Network at Intervals During Training",
    "/applications/Ma-Net/train_stage2.py:35-61": "DataLoader Initialization and Configuration",
    "/applications/Ma-Net/train_stage2.py:351-367": "Training Stage 2: Data Loader Setup",
    "/applications/Ma-Net/train_stage2.py:368-386": "Scribble Labeling and Image Processing in Stage 2",
    "/applications/Ma-Net/train_stage2.py:387-406": "Model Training: Concatenating Labels and GPU Check",
    "/applications/Ma-Net/train_stage2.py:407-423": "Interpolated Image Classification with Interactor",
    "/applications/Ma-Net/train_stage2.py:424-439": "Resizing and Updating Image Labels",
    "/applications/Ma-Net/train_stage2.py:441-462": "Round-Based Video Model Training",
    "/applications/Ma-Net/train_stage2.py:464-481": "Training Stage 2: Ma-Net Data Preparation",
    "/applications/Ma-Net/train_stage2.py:482-500": "Train Dataset Update and Model Training Progress",
    "/applications/Ma-Net/train_stage2.py:501-525": "Efficient ROI Operation for Scribble Labels",
    "/applications/Ma-Net/train_stage2.py:526-556": "Training Stage 2: Load, Train, Save Network",
    "/applications/Ma-Net/train_stage2.py:557-573": "RGB Palette Generation Code",
    "/applications/Ma-Net/train_stage2.py:574-586": "List of Numbers (81-150)",
    "/applications/Ma-Net/train_stage2.py:587-599": "Code Purpose Unclear",
    "/applications/Ma-Net/train_stage2.py:600-612": "Manager Training with Image Dimensions",
    "/applications/Ma-Net/train_stage2.py:62-89": "Initialize Manager Object for VOS Training",
    "/applications/Ma-Net/train_stage2.py:91-119": "Train Stage 2: Ma-Net Model Init & Optimization",
    "/applications/Ma-Net/utils/api.py": "Universal Tensor Utility API",
    "/applications/Ma-Net/utils/api.py:1-49": "Utility Functions for PyTorch-Paddle Conversion",
    "/applications/Ma-Net/utils/api.py:113-136": "Mode Validator for Image Data Types",
    "/applications/Ma-Net/utils/api.py:137-161": "Verify Image Mode and Data Type",
    "/applications/Ma-Net/utils/api.py:163-198": "Identity Class and Data Conversion Function",
    "/applications/Ma-Net/utils/api.py:199-223": "Gradient Norm Clipping Function",
    "/applications/Ma-Net/utils/api.py:224-250": "Max Absolute Value Finder",
    "/applications/Ma-Net/utils/api.py:251-274": "Ma-Net: Non-finite Parameter Clipping",
    "/applications/Ma-Net/utils/api.py:275-307": "Maximum Value and Index Extractor",
    "/applications/Ma-Net/utils/api.py:308-338": "Weight Initialization without Gradient Calculation",
    "/applications/Ma-Net/utils/api.py:339-364": "Truncated Normal Initialization",
    "/applications/Ma-Net/utils/api.py:366-398": "Tensor Transformations and Nonlinearity Gains",
    "/applications/Ma-Net/utils/api.py:399-425": "Gain Calculator for Non-linear Functions",
    "/applications/Ma-Net/utils/api.py:426-454": "Initializing Tensor Distributions",
    "/applications/Ma-Net/utils/api.py:455-483": "Truncated Normal Tensor Initialization",
    "/applications/Ma-Net/utils/api.py:484-526": "Initializing Tensor Functions in PyTorch",
    "/applications/Ma-Net/utils/api.py:50-83": "Tensor and Image Conversion Utilities",
    "/applications/Ma-Net/utils/api.py:528-562": "Preserving Identity in Linear and Conv Layers: Functions",
    "/applications/Ma-Net/utils/api.py:563-592": "Convolutional Layer Weights Init with Dirac Delta",
    "/applications/Ma-Net/utils/api.py:593-627": "PaddlePaddle Tensor Utilities",
    "/applications/Ma-Net/utils/api.py:628-655": "Glorot Initialization in Ma-Net API",
    "/applications/Ma-Net/utils/api.py:656-687": "Xavier/Glorot Tensor Initialization",
    "/applications/Ma-Net/utils/api.py:688-709": "Uniform Tensor Filler",
    "/applications/Ma-Net/utils/api.py:710-732": "Kaiming Uniform Initialization in PyTorch",
    "/applications/Ma-Net/utils/api.py:733-758": "Kaiming Weight Initialization",
    "/applications/Ma-Net/utils/api.py:759-789": "QR Factorization of Tensors",
    "/applications/Ma-Net/utils/api.py:790-822": "QR Decomposition and Scaling",
    "/applications/Ma-Net/utils/api.py:824-857": "Kaiming Normal Initializer Function",
    "/applications/Ma-Net/utils/api.py:84-112": "Compatibility Check: Adjust and Convert Image Data Types",
    "/applications/Ma-Net/utils/mask_damaging.py": "Mask Damager: Rotation and Translation in PaddleVideo",
    "/applications/Ma-Net/utils/mask_damaging.py:1-36": "Mask Damager: Random Transformations for Labels",
    "/applications/Ma-Net/utils/mask_damaging.py:130-155": "Random Mask Damage Functions",
    "/applications/Ma-Net/utils/mask_damaging.py:156-170": "Rotated and Translated Masks",
    "/applications/Ma-Net/utils/mask_damaging.py:37-73": "Mask Damaging Functions",
    "/applications/Ma-Net/utils/mask_damaging.py:74-98": "Mask Damaging Function",
    "/applications/Ma-Net/utils/mask_damaging.py:99-129": "Mask Damaging in PaddleVideo Library",
    "/applications/Ma-Net/utils/meters.py": "AverageMeter Class: Compute and Store Average",
    "/applications/Ma-Net/utils/utils.py": "Label to RGB Conversion",
    "/applications/MultimodalVideoTag/README.md": "Multimodal Video Tagging with PaddlePaddle 2.0",
    "/applications/MultimodalVideoTag/README.md:1-37": "Multimodal Video Classification with PaddlePaddle",
    "/applications/MultimodalVideoTag/README.md:38-65": "Training, Evaluation, and Inference with Multimodal Video Tagging",
    "/applications/MultimodalVideoTag/README.md:67-77": "Multimodal Video Tagging with Attention Clusters",
    "/applications/MultimodalVideoTag/download.sh": "Download ErnIE Model and Dataset",
    "/applications/MultimodalVideoTag/eval_and_save_model.sh": "Env Var Set, Eval & Save Model Script",
    "/applications/MultimodalVideoTag/inference.sh": "GPU-Based Inference Script",
    "/applications/MultimodalVideoTag/scenario_lib/accuracy_metrics.py": "Multimodal Video Accuracy Metrics Calculator",
    "/applications/MultimodalVideoTag/scenario_lib/accuracy_metrics.py:1-35": "Accuracy Metrics Calculator",
    "/applications/MultimodalVideoTag/scenario_lib/accuracy_metrics.py:126-158": "Top-K Accuracy Calculation",
    "/applications/MultimodalVideoTag/scenario_lib/accuracy_metrics.py:159-160": "Top-K Hits for Multilabel Prediction",
    "/applications/MultimodalVideoTag/scenario_lib/accuracy_metrics.py:36-68": "Multimodal Video Tag Accuracy Metrics",
    "/applications/MultimodalVideoTag/scenario_lib/accuracy_metrics.py:69-95": "Video Tagging Metrics Computation",
    "/applications/MultimodalVideoTag/scenario_lib/accuracy_metrics.py:96-125": "Multilabel Top-K Accuracy"
}
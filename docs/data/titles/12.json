{
    "/paddlevideo/modeling/framework/recognizers/recognizer_gcn.py": "GCN Recognizer Model Framework",
    "/paddlevideo/modeling/framework/recognizers/recognizer_gcn.py:1-33": "GCN Recognizer Model Framework",
    "/paddlevideo/modeling/framework/recognizers/recognizer_gcn.py:34-66": "RecognizerGCN: Image Classification Model",
    "/paddlevideo/modeling/framework/recognizers/recognizer_gcn.py:67-87": "GCN Recognizer Model with Test and Infer Steps",
    "/paddlevideo/modeling/framework/recognizers/recognizer_movinet_frame.py": "MoViNet Recognizer Framework",
    "/paddlevideo/modeling/framework/recognizers/recognizer_movinet_frame.py:1-33": "MoViNet Frame Recognizer Class",
    "/paddlevideo/modeling/framework/recognizers/recognizer_movinet_frame.py:34-57": "Training and Validation Steps in Recognizer",
    "/paddlevideo/modeling/framework/recognizers/recognizer_movinet_frame.py:58-78": "Model's Forward, Test, and Infer Steps",
    "/paddlevideo/modeling/framework/recognizers/recognizer_transformer.py": "Transformer-Based Recognizer Model",
    "/paddlevideo/modeling/framework/recognizers/recognizer_transformer.py:1-31": "Transformer-Based Recognizer Framework",
    "/paddlevideo/modeling/framework/recognizers/recognizer_transformer.py:33-62": "Training, Validation, Testing Steps in Recognizer Transformer",
    "/paddlevideo/modeling/framework/recognizers/recognizer_transformer.py:63-86": "Multi-View Image Inference Model",
    "/paddlevideo/modeling/framework/recognizers/recognizer_transformer.py:87-98": "Averaging Method for Recognizer Transformer",
    "/paddlevideo/modeling/framework/recognizers/recognizer_transformer_MRI.py": "Recognizer-Transformer MRI Model Code",
    "/paddlevideo/modeling/framework/recognizers/recognizer_transformer_MRI.py:1-32": "RecognizerTransformer_MRI Model Definition",
    "/paddlevideo/modeling/framework/recognizers/recognizer_transformer_MRI.py:33-63": "Recognizer Transformer Image Classifier",
    "/paddlevideo/modeling/framework/recognizers/recognizer_transformer_MRI.py:65-89": "Average-View Model Inference",
    "/paddlevideo/modeling/framework/recognizers/recognizer_transformer_MRI.py:90-104": "Combining Scores in Recognizer Transformer",
    "/paddlevideo/modeling/framework/segment/__init__.py": "PaddleVideo Segment Models",
    "/paddlevideo/modeling/framework/segment/base.py": "Semi-Video Object Segmentation Base Class",
    "/paddlevideo/modeling/framework/segment/base.py:1-29": "Abstract Base Class for Semi-Video Object Segmentation",
    "/paddlevideo/modeling/framework/segment/base.py:30-57": "Segment Model Initialization and Forward Pass",
    "/paddlevideo/modeling/framework/segment/base.py:58-90": "Abstract Class for Model Training Phases",
    "/paddlevideo/modeling/framework/segment/cfbi.py": "CFBI Model for AI Segmentation",
    "/paddlevideo/modeling/framework/segment/cfbi.py:1-30": "CFBI Model Python Class",
    "/paddlevideo/modeling/framework/segment/cfbi.py:109-127": "Resizing CFBI in PaddleVideo",
    "/paddlevideo/modeling/framework/segment/cfbi.py:128-144": "Preparing Frame Embeddings for Attention and Loss Calculation",
    "/paddlevideo/modeling/framework/segment/cfbi.py:145-164": "Distance Bias Assignment for Frame Sequences",
    "/paddlevideo/modeling/framework/segment/cfbi.py:165-184": "NotImplementedError Handler",
    "/paddlevideo/modeling/framework/segment/cfbi.py:185-200": "Global Matching Evaluation in CFBI Model",
    "/paddlevideo/modeling/framework/segment/cfbi.py:201-216": "Preparing Input for Local Matching Function",
    "/paddlevideo/modeling/framework/segment/cfbi.py:217-237": "Global/Local Background Subtraction for Image Segmentation",
    "/paddlevideo/modeling/framework/segment/cfbi.py:238-256": "Video Segmentation Model Code",
    "/paddlevideo/modeling/framework/segment/cfbi.py:257-279": "CFBI Attention Calculation",
    "/paddlevideo/modeling/framework/segment/cfbi.py:280-286": "Append and Pass for Attention Model",
    "/paddlevideo/modeling/framework/segment/cfbi.py:31-56": "CFBI Framework Testing",
    "/paddlevideo/modeling/framework/segment/cfbi.py:57-84": "PaddleVideo CFBI Else Block",
    "/paddlevideo/modeling/framework/segment/cfbi.py:85-108": "Segmentation Head Initialization",
    "/paddlevideo/modeling/framework/segment/utils.py": "PaddleVideo Framework for Object Segment Matching",
    "/paddlevideo/modeling/framework/segment/utils.py:1-31": "Foreground to Background Distance Conversion",
    "/paddlevideo/modeling/framework/segment/utils.py:114-138": "Query-Reference Frame Feature Computation",
    "/paddlevideo/modeling/framework/segment/utils.py:139-167": "Global Matching with Embedding Chunks",
    "/paddlevideo/modeling/framework/segment/utils.py:168-186": "Nearest Neighbor Distance Calculator",
    "/paddlevideo/modeling/framework/segment/utils.py:187-209": "Spatial Pyramid Pooling Point Padding",
    "/paddlevideo/modeling/framework/segment/utils.py:210-230": "Segmentation Method in PaddleVideo Library",
    "/paddlevideo/modeling/framework/segment/utils.py:231-257": "Nearest Neighbor Video Segment Matching",
    "/paddlevideo/modeling/framework/segment/utils.py:258-277": "Distance to Nearest Neighbor Calculator",
    "/paddlevideo/modeling/framework/segment/utils.py:278-299": "Atrous Tensor Matching Function",
    "/paddlevideo/modeling/framework/segment/utils.py:300-318": "Image Segmentation Atrous Rate Code",
    "/paddlevideo/modeling/framework/segment/utils.py:32-68": "Pairwise L2 Distance Matrix Calculator",
    "/paddlevideo/modeling/framework/segment/utils.py:320-338": "Concatenate and Pad Embeddings",
    "/paddlevideo/modeling/framework/segment/utils.py:339-356": "Embedding Reshaper",
    "/paddlevideo/modeling/framework/segment/utils.py:357-375": "Atrous Spatial Pyramid Pooling Padder",
    "/paddlevideo/modeling/framework/segment/utils.py:376-394": "Flattened Embeddings Conversion",
    "/paddlevideo/modeling/framework/segment/utils.py:395-415": "Feature Selection and Reshaping for Segment Matching",
    "/paddlevideo/modeling/framework/segment/utils.py:416-442": "Pairwise L2 Distance Nearest Neighbor Features",
    "/paddlevideo/modeling/framework/segment/utils.py:443-464": "Downsampling with Bilinear Interpolation",
    "/paddlevideo/modeling/framework/segment/utils.py:465-492": "Atrous Dilation Pairwise Distance Calculation",
    "/paddlevideo/modeling/framework/segment/utils.py:493-513": "Pairwise L2 Distance Compute Function",
    "/paddlevideo/modeling/framework/segment/utils.py:514-537": "Downsizing and Padding Tensors",
    "/paddlevideo/modeling/framework/segment/utils.py:539-566": "Distance Calculator for Frame Embeddings",
    "/paddlevideo/modeling/framework/segment/utils.py:567-584": "Nearest Neighbor Video Segmentation",
    "/paddlevideo/modeling/framework/segment/utils.py:585-609": "Parallel Nearest Neighbor Calculation",
    "/paddlevideo/modeling/framework/segment/utils.py:610-635": "Pairwise Distance Calculator",
    "/paddlevideo/modeling/framework/segment/utils.py:637-662": "Atrous Spatial Pyramid Pooling in PaddlePaddle",
    "/paddlevideo/modeling/framework/segment/utils.py:663-684": "Image Segmentation with Distance Matrix",
    "/paddlevideo/modeling/framework/segment/utils.py:685-709": "Attention Heads Calculator",
    "/paddlevideo/modeling/framework/segment/utils.py:69-92": "Pairwise Distance Computation and Feature Extraction",
    "/paddlevideo/modeling/framework/segment/utils.py:710-736": "Attention Head Evaluation",
    "/paddlevideo/modeling/framework/segment/utils.py:737-754": "Total Head Calculation with Stability",
    "/paddlevideo/modeling/framework/segment/utils.py:93-113": "Nearest Neighbor Features Calculator",
    "/paddlevideo/modeling/framework/segmenters/__init__.py": "PaddleVideo Segmenter Modules",
    "/paddlevideo/modeling/framework/segmenters/asrf.py": "ASRF Segmentation Model in PaddleVideo",
    "/paddlevideo/modeling/framework/segmenters/asrf.py:1-33": "ASRF: PaddleVideo Segmenter Model",
    "/paddlevideo/modeling/framework/segmenters/asrf.py:101-129": "ASRF Segmentation Model Inference",
    "/paddlevideo/modeling/framework/segmenters/asrf.py:130-143": "Forward Pass and Sigmoid Application",
    "/paddlevideo/modeling/framework/segmenters/asrf.py:34-67": "Segmentation Model Training Code",
    "/paddlevideo/modeling/framework/segmenters/asrf.py:69-100": "ASRF Model Validation Step",
    "/paddlevideo/modeling/framework/segmenters/base.py": "BaseSegmenter: Foundation for PaddleVideo Segmenters",
    "/paddlevideo/modeling/framework/segmenters/base.py:1-30": "BaseSegmenter: Foundation for All Segmenters",
    "/paddlevideo/modeling/framework/segmenters/base.py:100-100": "NotImplementedError in Base Segmenter",
    "/paddlevideo/modeling/framework/segmenters/base.py:32-63": "Segmenter Base Class Init",
    "/paddlevideo/modeling/framework/segmenters/base.py:64-99": "Trainable Segmenter Base Class",
    "/paddlevideo/modeling/framework/segmenters/ms_tcn.py": "MS-TCN Video Segmentation Tool",
    "/paddlevideo/modeling/framework/segmenters/ms_tcn.py:1-33": "MS-TCN Video Segmenter",
    "/paddlevideo/modeling/framework/segmenters/ms_tcn.py:34-70": "MS-TCN Segmenter Training and Validation",
    "/paddlevideo/modeling/framework/segmenters/ms_tcn.py:72-101": "MS-TCN Model: Train, Test, and Infer Functions",
    "/paddlevideo/modeling/framework/segmenters/utils.py": "Gaussian Smoothing in PaddlePaddle",
    "/paddlevideo/modeling/framework/segmenters/utils.py:1-30": "Gaussian Smoothing in PaddlePaddle",
    "/paddlevideo/modeling/framework/segmenters/utils.py:149-176": "Boundary-Based Action Segmentation",
    "/paddlevideo/modeling/framework/segmenters/utils.py:177-203": "Majority Class Action Segmentation",
    "/paddlevideo/modeling/framework/segmenters/utils.py:204-242": "Smoothing and Relabeling Functions",
    "/paddlevideo/modeling/framework/segmenters/utils.py:243-270": "ASRF Post-Processing for Action Segmentation",
    "/paddlevideo/modeling/framework/segmenters/utils.py:271-301": "Tensor Fan-In/Out and Refinement Function",
    "/paddlevideo/modeling/framework/segmenters/utils.py:302-335": "Neural Network Weight Initialization Code",
    "/paddlevideo/modeling/framework/segmenters/utils.py:31-62": "Gaussian Kernel Initialization and Application",
    "/paddlevideo/modeling/framework/segmenters/utils.py:336-343": "Initialize Weights and Biases for Neural Network Layer",
    "/paddlevideo/modeling/framework/segmenters/utils.py:63-95": "1D Convolution and Argrelmax Functions for Image Processing",
    "/paddlevideo/modeling/framework/segmenters/utils.py:97-146": "Tensor Conversion Functions",
    "/paddlevideo/modeling/heads/__init__.py": "Importing Video Heads from PaddleVideo",
    "/paddlevideo/modeling/heads/__init__.py:1-25": "Importing PaddleVideo Heads",
    "/paddlevideo/modeling/heads/__init__.py:26-49": "Versatile Video Heads Import",
    "/paddlevideo/modeling/heads/adds_head.py": "AddsHead: Object Detection in PaddleVideo",
    "/paddlevideo/modeling/heads/adds_head.py:1-33": "AddsHead Class Definition",
    "/paddlevideo/modeling/heads/adds_head.py:118-144": "Error Metrics in Depth Prediction",
    "/paddlevideo/modeling/heads/adds_head.py:146-146": "Metrics for Regression Models",
    "/paddlevideo/modeling/heads/adds_head.py:34-62": "AddsHead: Initialization and Forward Pass",
    "/paddlevideo/modeling/heads/adds_head.py:63-95": "AddsHead: Compute Error Metrics",
    "/paddlevideo/modeling/heads/adds_head.py:96-117": "Multi-GPU Tensor Averaging",
    "/paddlevideo/modeling/heads/agcn2s_head.py": "AGCN2s Head: PaddleVideo's Versatile Model Component",
    "/paddlevideo/modeling/heads/agcn2s_head.py:1-32": "AGCN2s Head Class in PaddleVideo",
    "/paddlevideo/modeling/heads/agcn2s_head.py:33-56": "Agcn2sHead: Initialize Linear Layer and Reshape",
    "/paddlevideo/modeling/heads/agcn2s_head.py:57-59": "Average-Then-FC Aggregation",
    "/paddlevideo/modeling/heads/asrf_head.py": "ASRF Head: Action Recognition and Metrics",
    "/paddlevideo/modeling/heads/asrf_head.py:1-32": "ASRF Head: PaddleVideo Modeling",
    "/paddlevideo/modeling/heads/asrf_head.py:100-136": "ASRF Head and F1 Score Calculation",
    "/paddlevideo/modeling/heads/asrf_head.py:137-170": "ASRF Head: Labels and Levenshtein Distance",
    "/paddlevideo/modeling/heads/asrf_head.py:171-200": "Edit Score Calculation with Levenshtein Distance",
    "/paddlevideo/modeling/heads/asrf_head.py:201-212": "ASRF Head: Calculating Metrics",
    "/paddlevideo/modeling/heads/asrf_head.py:34-63": "ASRF Head Model Initialization",
    "/paddlevideo/modeling/heads/asrf_head.py:64-98": "ASRF Head Model: Forward Pass and Weights Init",
    "/paddlevideo/modeling/heads/attention_lstm_head.py": "LSTM Attention Mechanism for PaddleVideo",
    "/paddlevideo/modeling/heads/attention_lstm_head.py:1-32": "Attention LSTM Head: PaddleVideo's Neural Network Component",
    "/paddlevideo/modeling/heads/attention_lstm_head.py:121-144": "Attention LSTM Sequence Modeling Head",
    "/paddlevideo/modeling/heads/attention_lstm_head.py:145-173": "Attention LSTM Head Metrics",
    "/paddlevideo/modeling/heads/attention_lstm_head.py:174-195": "Bidirectional LSTM Attention Mechanism for Multimodal Fusion",
    "/paddlevideo/modeling/heads/attention_lstm_head.py:196-221": "Attention-based LSTM Head in PaddleVideo",
    "/paddlevideo/modeling/heads/attention_lstm_head.py:222-244": "Bi-directional LSTM Attention Head",
    "/paddlevideo/modeling/heads/attention_lstm_head.py:245-267": "LSTM-based Attention Pooling for Neural Networks",
    "/paddlevideo/modeling/heads/attention_lstm_head.py:268-288": "LSTM Attention Head with Loss and Metrics",
    "/paddlevideo/modeling/heads/attention_lstm_head.py:33-53": "Bi-directional LSTM Attention Head for Video Classification",
    "/paddlevideo/modeling/heads/attention_lstm_head.py:54-74": "Bidirectional LSTM Attention Head",
    "/paddlevideo/modeling/heads/attention_lstm_head.py:75-95": "Attention LSTM Head in PaddleVideo",
    "/paddlevideo/modeling/heads/attention_lstm_head.py:96-120": "Attention LSTM Head",
    "/paddlevideo/modeling/heads/base.py": "PaddleVideo Classification Head: Versatile, Distributed",
    "/paddlevideo/modeling/heads/base.py:1-34": "Base Head Initializer: Initialize Weights for Subclasses",
    "/paddlevideo/modeling/heads/base.py:114-143": "Classification Loss Function",
    "/paddlevideo/modeling/heads/base.py:144-164": "Uniform Hard/Soft Loss Calculation",
    "/paddlevideo/modeling/heads/base.py:165-178": "Average Metrics Across Devices",
    "/paddlevideo/modeling/heads/base.py:35-65": "PaddleVideo Classification Head Base",
    "/paddlevideo/modeling/heads/base.py:67-91": "Loss, Accuracy Calculator",
    "/paddlevideo/modeling/heads/base.py:92-113": "Mix-up Loss for MRI Classification",
    "/paddlevideo/modeling/heads/bbox_head.py": "BBoxHeadAVA: Box Detection and Evaluation",
    "/paddlevideo/modeling/heads/bbox_head.py:1-32": "BBoxHeadAVA: Simple RoI Head with Pooling Options",
    "/paddlevideo/modeling/heads/bbox_head.py:107-126": "BBox Head Generator in PaddleVideo",
    "/paddlevideo/modeling/heads/bbox_head.py:128-152": "PaddleVideo Bbox Head Labeling and Comparison",
    "/paddlevideo/modeling/heads/bbox_head.py:153-171": "Multi-Label Recall and Precision Calculation",
    "/paddlevideo/modeling/heads/bbox_head.py:172-195": "BBox Head: Recall and Precision Calculation",
    "/paddlevideo/modeling/heads/bbox_head.py:196-218": "Bounding Box Heads: Accuracy and Loss Calculation",
    "/paddlevideo/modeling/heads/bbox_head.py:219-225": "Calculating BBox Scores in PaddleVideo Model",
    "/paddlevideo/modeling/heads/bbox_head.py:33-61": "Class BBoxHeadAVA Initialization",
    "/paddlevideo/modeling/heads/bbox_head.py:62-83": "BBoxHead Model Initialization",
    "/paddlevideo/modeling/heads/bbox_head.py:85-106": "Bbox Head Classification and Debug Image Init",
    "/paddlevideo/modeling/heads/cfbi_head.py": "Multi-Input Collaborative Ensembler Network",
    "/paddlevideo/modeling/heads/cfbi_head.py:1-32": "IA_Gate Layer Class Definition",
    "/paddlevideo/modeling/heads/cfbi_head.py:120-160": "Convolutional Feature Fusion Head (CFBI)",
    "/paddlevideo/modeling/heads/cfbi_head.py:161-193": "Convolutional Feature Fusion Block and ASPP Module",
    "/paddlevideo/modeling/heads/cfbi_head.py:195-218": "ASPP Modules with Global Pooling in CFBI Head",
    "/paddlevideo/modeling/heads/cfbi_head.py:220-251": "CFBI Head: Deep Feature Extraction and Aggregation",
    "/paddlevideo/modeling/heads/cfbi_head.py:254-279": "CollaborativeEnsemblerMS Class in PaddleVideo",
    "/paddlevideo/modeling/heads/cfbi_head.py:281-306": "Multi-Stage Transformer Layer Initialization",
    "/paddlevideo/modeling/heads/cfbi_head.py:308-332": "Feature Extraction and Fusion Model Components",
    "/paddlevideo/modeling/heads/cfbi_head.py:33-65": "GCT Layer Definition and Initialization",
    "/paddlevideo/modeling/heads/cfbi_head.py:333-360": "Neural Network Architecture for CV Task",
    "/paddlevideo/modeling/heads/cfbi_head.py:361-401": "Instance Segmentation Network Architecture with ASPP Module",
    "/paddlevideo/modeling/heads/cfbi_head.py:402-433": "Convolutional Feature Binding IA Head",
    "/paddlevideo/modeling/heads/cfbi_head.py:435-448": "Augmented Background Logit Fusion",
    "/paddlevideo/modeling/heads/cfbi_head.py:66-95": "PaddleVideo's CFBI Head",
    "/paddlevideo/modeling/heads/cfbi_head.py:96-119": "CFBI Head: BatchNorm-ConvNet with ReLU",
    "/paddlevideo/modeling/heads/ctrgcn_head.py": "CTR-GCN Neural Network Head",
    "/paddlevideo/modeling/heads/ctrgcn_head.py:1-32": "CTR-GCN Head in PaddleVideo",
    "/paddlevideo/modeling/heads/ctrgcn_head.py:34-63": "Neural Network Head Constructor with Dropout",
    "/paddlevideo/modeling/heads/ctrgcn_head.py:65-65": "FC Layer in CTRGCN Head",
    "/paddlevideo/modeling/heads/i3d_head.py": "I3D Classification Head in PaddleVideo",
    "/paddlevideo/modeling/heads/i3d_head.py:1-31": "I3D Head: Classification for PaddleVideo",
    "/paddlevideo/modeling/heads/i3d_head.py:32-59": "I3D Head Class Constructor",
    "/paddlevideo/modeling/heads/i3d_head.py:60-91": "I3D Head: Feature Processing and Classification",
    "/paddlevideo/modeling/heads/i3d_head.py:92-95": "Output Layer for PaddleVideo Classification",
    "/paddlevideo/modeling/heads/movinet_head.py": "MoViNetHead: Custom Head for Video Classification",
    "/paddlevideo/modeling/heads/ms_tcn_head.py": "MS-TCN Head: Loss Calculation",
    "/paddlevideo/modeling/heads/ms_tcn_head.py:1-33": "MS-TCN Head: CrossEntropy and MSE Losses",
    "/paddlevideo/modeling/heads/ms_tcn_head.py:106-137": "Edit Score Calculation Functions",
    "/paddlevideo/modeling/heads/ms_tcn_head.py:138-165": "F-score Calculator for Labeled Sequences",
    "/paddlevideo/modeling/heads/ms_tcn_head.py:34-68": "MS-TCN Head: Loss and F1 Score Calculation",
    "/paddlevideo/modeling/heads/ms_tcn_head.py:69-105": "F1 Score Calculation and Label Extraction Algorithm",
    "/paddlevideo/modeling/heads/pptimesformer_head.py": "PaddlePaddle TimeSformer Head",
    "/paddlevideo/modeling/heads/pptimesformer_head.py:1-30": "Introducing ppTimeSformerHead Class",
    "/paddlevideo/modeling/heads/pptimesformer_head.py:31-58": "PPTimesformerHead: Paddle Video Model Class",
    "/paddlevideo/modeling/heads/pptimesformer_head.py:59-74": "PPTimesformer Head Definition",
    "/paddlevideo/modeling/heads/pptsm_head.py": "PaddlePaddle Video: PPTSMHead Initialization",
    "/paddlevideo/modeling/heads/pptsm_head.py:1-31": "ppTSMHead: PaddleVideo Registry Class",
    "/paddlevideo/modeling/heads/pptsm_head.py:32-58": "PPTSM Head Initialization",
    "/paddlevideo/modeling/heads/pptsm_head.py:59-87": "PPTSM Head Initialization",
    "/paddlevideo/modeling/heads/pptsm_head.py:88-92": "PaddleVideo's PptsmHead FC Function",
    "/paddlevideo/modeling/heads/pptsn_head.py": "PaddlePaddle PP-TSN Head Classification",
    "/paddlevideo/modeling/heads/pptsn_head.py:1-30": "Python PP-TSN Head Implementation",
    "/paddlevideo/modeling/heads/pptsn_head.py:31-54": "Adaptive Pooling PPTSN Head",
    "/paddlevideo/modeling/heads/pptsn_head.py:56-84": "PaddlePaddle Classification Head Code",
    "/paddlevideo/modeling/heads/pptsn_head.py:85-103": "PPTSN Head Processing",
    "/paddlevideo/modeling/heads/roi_extractor.py": "RoIAlign: Region Feature Alignment",
    "/paddlevideo/modeling/heads/roi_extractor.py:1-31": "RoIAlign: Feature Alignment Tool",
    "/paddlevideo/modeling/heads/roi_extractor.py:32-53": "ROI Alignment with PaddlePaddle",
    "/paddlevideo/modeling/heads/roi_head.py": "ROI Head for Object Detection",
    "/paddlevideo/modeling/heads/roi_head.py:1-29": "Bounding Box to Detection Results Converter",
    "/paddlevideo/modeling/heads/roi_head.py:115-134": "ROI Head: Bbox Loss Calculation and Assignment",
    "/paddlevideo/modeling/heads/roi_head.py:135-158": "RoI Head BBox Prediction Functions",
    "/paddlevideo/modeling/heads/roi_head.py:159-177": "Detect Bboxes Without Augmentation",
    "/paddlevideo/modeling/heads/roi_head.py:30-59": "NMS-Based Bounding Box Filtering",
    "/paddlevideo/modeling/heads/roi_head.py:60-93": "PaddlePaddle RoI Head Class",
    "/paddlevideo/modeling/heads/roi_head.py:94-114": "Bbox Head Initialization and Feature Extraction",
    "/paddlevideo/modeling/heads/single_straight3d.py": "Single Straight 3D ROI Extractor",
    "/paddlevideo/modeling/heads/single_straight3d.py:1-28": "SingleRoIExtractor3D: RoI Extractor for 3D Features",
    "/paddlevideo/modeling/heads/single_straight3d.py:29-55": "3D Head Feature Extraction",
    "/paddlevideo/modeling/heads/single_straight3d.py:56-79": "Spatio-Temporal Feature Extraction and ROI Pooling",
    "/paddlevideo/modeling/heads/slowfast_head.py": "SlowFast 3D Head Initialization",
    "/paddlevideo/modeling/heads/slowfast_head.py:1-30": "SlowFast Head: PaddleVideo ResNeXt 3D Projection",
    "/paddlevideo/modeling/heads/slowfast_head.py:114-137": "SlowFast Head: Pooling and Dropout Operations",
    "/paddlevideo/modeling/heads/slowfast_head.py:31-56": "SlowFast_Head: Concatenating Multi-Pathway Classifier",
    "/paddlevideo/modeling/heads/slowfast_head.py:57-83": "Initializing SlowFast Head Model Parameters",
    "/paddlevideo/modeling/heads/slowfast_head.py:84-113": "SlowFast Head Model Initialization",
    "/paddlevideo/modeling/heads/stgcn_head.py": "STGCN Head Initialization and Forward Pass",
    "/paddlevideo/modeling/heads/stgcn_head.py:1-32": "STGCN Head: PaddlePaddle's Video Modeling Class",
    "/paddlevideo/modeling/heads/stgcn_head.py:33-50": "Convolutional STGCN Head",
    "/paddlevideo/modeling/heads/timesformer_head.py": "TimeSformer Head: TimeSformer's Model Head",
    "/paddlevideo/modeling/heads/timesformer_head.py:1-29": "TimeSformer Head Class",
    "/paddlevideo/modeling/heads/timesformer_head.py:30-60": "TimeSformer Head: PaddlePaddle's Dynamic Initialization",
    "/paddlevideo/modeling/heads/timesformer_head.py:61-70": "Fully Connected Layer with Dropout Clarification",
    "/paddlevideo/modeling/heads/token_shift_head.py": "TokenShiftHead: Paddle's Classification Framework",
    "/paddlevideo/modeling/heads/token_shift_head.py:1-30": "TokenShiftHead: Transformer Classification Task Head",
    "/paddlevideo/modeling/heads/token_shift_head.py:31-60": "Initializing Token Shift Head Parameters",
    "/paddlevideo/modeling/heads/token_shift_head.py:61-79": "TokenShiftHead: Classification Scores for Each Frame",
    "/paddlevideo/modeling/heads/transnetv2_head.py": "TransNetV2Head: Loss and F1 Score in Computer Vision",
    "/paddlevideo/modeling/heads/transnetv2_head.py:1-29": "TransNetV2Head: CV Model Base Class",
    "/paddlevideo/modeling/heads/transnetv2_head.py:30-45": "TransnetV2 Head: Loss and F1 Score Calculation",
    "/paddlevideo/modeling/heads/tsm_head.py": "TSM Head: PaddleVideo's Temporal Segment Network",
    "/paddlevideo/modeling/heads/tsm_head.py:1-33": "TSM Head Class",
    "/paddlevideo/modeling/heads/tsm_head.py:34-57": "TSM Head: PyTorch Class Initialization",
    "/paddlevideo/modeling/heads/tsm_head.py:58-89": "TSM Head Initialization",
    "/paddlevideo/modeling/heads/tsm_head.py:90-99": "Temporal Segment Network Head Score Averaging",
    "/paddlevideo/modeling/heads/tsn_head.py": "TSN Head: Image Classification in PaddleVideo",
    "/paddlevideo/modeling/heads/tsn_head.py:1-30": "TSN Head: Image Classification Model",
    "/paddlevideo/modeling/heads/tsn_head.py:31-63": "TSN Head Initialization",
    "/paddlevideo/modeling/heads/tsn_head.py:64-93": "TSN Head: Average Pooling and Classification",
    "/paddlevideo/modeling/losses/__init__.py": "Comprehensive Losses for PaddleVideo",
    "/paddlevideo/modeling/losses/__init__.py:1-26": "Extensive Loss Functions for PaddleVideo",
    "/paddlevideo/modeling/losses/__init__.py:27-29": "Loss Functions for PaddleVideo",
    "/paddlevideo/modeling/losses/actbert_loss.py": "ActBert Loss Functions",
    "/paddlevideo/modeling/losses/actbert_loss.py:1-32": "ActBertLoss: Custom Loss for ActBert Model",
    "/paddlevideo/modeling/losses/actbert_loss.py:33-50": "ActBert Loss: Visual Classification with KLDivLoss",
    "/paddlevideo/modeling/losses/actbert_loss.py:51-75": "Multi-Loss Calculation in ActBERT Model",
    "/paddlevideo/modeling/losses/asrf_loss.py": "Custom Loss Functions for Video Modeling",
    "/paddlevideo/modeling/losses/asrf_loss.py:1-32": "TMSE Loss: Temporal MSE for Action Segmentation",
    "/paddlevideo/modeling/losses/asrf_loss.py:128-167": "Action Segmentation Loss: Flexible Implementations",
    "/paddlevideo/modeling/losses/asrf_loss.py:168-198": "Initialize Loss Functions and Weights",
    "/paddlevideo/modeling/losses/asrf_loss.py:200-221": "ASRF Loss: CrossEntropy with Class Weights",
    "/paddlevideo/modeling/losses/asrf_loss.py:222-248": "Adjustable Sensitivity Ranking Fusion Loss",
    "/paddlevideo/modeling/losses/asrf_loss.py:250-291": "Boundary Regression Loss Function Combination",
    "/paddlevideo/modeling/losses/asrf_loss.py:292-321": "Positive Weight Calculator",
    "/paddlevideo/modeling/losses/asrf_loss.py:322-359": "Multicriterion ASR Loss Function",
    "/paddlevideo/modeling/losses/asrf_loss.py:33-66": "ASRF and Temporal MSE Loss Functions",
    "/paddlevideo/modeling/losses/asrf_loss.py:360-373": "Initialize ActionSegmentationLoss Object",
    "/paddlevideo/modeling/losses/asrf_loss.py:374-401": "Custom Loss Function for Video Modeling Framework",
    "/paddlevideo/modeling/losses/asrf_loss.py:67-92": "Gaussian-weighted MSE Loss in Paddle",
    "/paddlevideo/modeling/losses/asrf_loss.py:94-126": "ASRF and Focal Loss Calculations",
    "/paddlevideo/modeling/losses/base.py": "PaddlePaddle Loss Base Class",
    "/paddlevideo/modeling/losses/base.py:1-31": "Base Loss Function in PaddlePaddle",
    "/paddlevideo/modeling/losses/base.py:32-49": "Weighted Loss Initialization and Forward Pass",
    "/paddlevideo/modeling/losses/bmn_loss.py": "BMN Loss for PaddleVideo",
    "/paddlevideo/modeling/losses/bmn_loss.py:1-32": "BMN Loss Function for PaddleVideo",
    "/paddlevideo/modeling/losses/bmn_loss.py:102-126": "BMN Loss Calculation",
    "/paddlevideo/modeling/losses/bmn_loss.py:127-147": "Forward Function: BMN Loss Calculation",
    "/paddlevideo/modeling/losses/bmn_loss.py:149-155": "BMN Loss Calculation: PEM & TEAM Detection",
    "/paddlevideo/modeling/losses/bmn_loss.py:33-55": "Binary Mask Network Loss",
    "/paddlevideo/modeling/losses/bmn_loss.py:56-77": "Bi-directional Masked Object Detection Loss",
    "/paddlevideo/modeling/losses/bmn_loss.py:78-101": "Uniform Mask Multiplication and Ratio Calculation",
    "/paddlevideo/modeling/losses/cross_entropy_loss.py": "CrossEntropy Loss Function in PaddlePaddle",
    "/paddlevideo/modeling/losses/cross_entropy_loss.py:1-30": "Custom Cross Entropy Loss in PaddlePaddle",
    "/paddlevideo/modeling/losses/cross_entropy_loss.py:31-36": "Calculate CrossEntropy Loss in Paddle",
    "/paddlevideo/modeling/losses/depth_loss.py": "Depth Loss Calculation for PaddleVideo",
    "/paddlevideo/modeling/losses/depth_loss.py:1-29": "Smoothness Loss Function",
    "/paddlevideo/modeling/losses/depth_loss.py:106-137": "SSIM Loss Calculation in ADDSLoss",
    "/paddlevideo/modeling/losses/depth_loss.py:138-173": "Scale-Based Depth Loss Calculation",
    "/paddlevideo/modeling/losses/depth_loss.py:174-197": "Depth Loss Computation Algorithm",
    "/paddlevideo/modeling/losses/depth_loss.py:199-223": "Depth Loss Calculation",
    "/paddlevideo/modeling/losses/depth_loss.py:225-250": "Computing Day-Night Losses for Video",
    "/paddlevideo/modeling/losses/depth_loss.py:251-276": "Depth and Reconstruction Losses in Day-Night Scenes",
    "/paddlevideo/modeling/losses/depth_loss.py:278-290": "Depth Loss Update",
    "/paddlevideo/modeling/losses/depth_loss.py:30-67": "Depth Loss: DiffLoss and MSE for Disparity Estimation",
    "/paddlevideo/modeling/losses/depth_loss.py:68-104": "Structured Loss Functions for PaddlePaddle",
    "/paddlevideo/modeling/losses/distillation_loss.py": "Distillation & KL Divergence Losses",
    "/paddlevideo/modeling/losses/distillation_loss.py:1-30": "Distillation Entropy Loss Class",
    "/paddlevideo/modeling/losses/distillation_loss.py:31-60": "Distillation-Aware CrossEntropy Loss with Weighted Average",
    "/paddlevideo/modeling/losses/distillation_loss.py:61-79": "Kullback-Leibler Divergence Loss Class",
    "/paddlevideo/modeling/losses/transnetv2_loss.py": "TransNetV2 Loss Calculation",
    "/paddlevideo/modeling/losses/transnetv2_loss.py:1-28": "TransNetV2 Loss Calculator",
    "/paddlevideo/modeling/losses/transnetv2_loss.py:30-54": "TransNetV2 Loss Function",
    "/paddlevideo/modeling/losses/transnetv2_loss.py:56-56": "TransNetV2 Total Loss Calculation",
    "/paddlevideo/modeling/losses/yowo_loss.py": "YOLO Loss Functions in PaddleVideo",
    "/paddlevideo/modeling/losses/yowo_loss.py:1-31": "Focal Loss: Focusing on Hard Examples",
    "/paddlevideo/modeling/losses/yowo_loss.py:113-137": "Sigmoid Transformation for YOLO Anchors"
}
{
    "summary": "PaddleVideo's BasketballAction app uses PaddlePaddle 2.0 and models for basketball action detection, achieving an F1-score of 80.14%. Developed by authors including hari and Joonseok Lee, it optimizes based on speed, time distribution, and feature fusion methods.",
    "details": [
        {
            "comment": "This code is for basketball action detection, using PaddlePaddle 2.0 and incorporating various video models from PaddleVideo (ppTSM, BMN, attentionLSTM). The process includes image feature extraction with ppTSM, proposal extraction with BMN, and LSTM-based action classification and regression. Dataset preparation involves data handling, label format specification, gts processing to JSON format, and abstracting frames from mp4 files using ffmpeg.",
            "location": "\"/media/root/Prima/works/PaddleVideo/docs/src/applications/BasketballAction/README.md\":0-68",
            "content": "# \u7bee\u7403\u52a8\u4f5c\u68c0\u6d4b\u6a21\u578b\n## \u5185\u5bb9\n- [\u6a21\u578b\u7b80\u4ecb](#\u6a21\u578b\u7b80\u4ecb)\n- [\u6570\u636e\u51c6\u5907](#\u6570\u636e\u51c6\u5907)\n- [\u6a21\u578b\u8bad\u7ec3](#\u6a21\u578b\u8bad\u7ec3)\n- [\u6a21\u578b\u8bc4\u4f30](#\u6a21\u578b\u8bc4\u4f30)\n- [\u6a21\u578b\u63a8\u7406](#\u6a21\u578b\u63a8\u7406)\n- [\u6a21\u578b\u4f18\u5316](#\u6a21\u578b\u4f18\u5316)\n- [\u6a21\u578b\u90e8\u7f72](#\u6a21\u578b\u90e8\u7f72)\n- [\u53c2\u8003\u8bba\u6587](#\u53c2\u8003\u8bba\u6587)\n## \u6a21\u578b\u7b80\u4ecb\n\u8be5\u4ee3\u7801\u5e93\u7528\u4e8e\u7bee\u7403\u52a8\u4f5c\u68c0\u6d4b+\u8bc6\u522b, \u57fa\u4e8epaddle2.0\u7248\u672c\u5f00\u53d1\uff0c\u7ed3\u5408PaddleVideo\u4e2d\u7684ppTSM, BMN, attentionLSTM\u7684\u591a\u4e2a\u89c6\u9891\u6a21\u578b\u8fdb\u884c\u89c6\u9891\u65f6\u7a7a\u4e8c\u9636\u6bb5\u68c0\u6d4b\u7b97\u6cd5\u3002\n\u4e3b\u8981\u5206\u4e3a\u5982\u4e0b\u51e0\u6b65\n - \u7279\u5f81\u62bd\u53d6\n    - \u56fe\u50cf\u7279\u6027\uff0cppTSM\n    - \u97f3\u9891\u7279\u5f81\uff0cVggsound\n - proposal\u63d0\u53d6\uff0cBMN\n - LSTM\uff0c\u52a8\u4f5c\u5206\u7c7b + \u56de\u5f52\n## \u6570\u636e\u51c6\u5907\n\u6570\u636e\u96c6\u5904\u7406\u4ee3\u7801\n```\n\u53c2\u8003https://github.com/PaddlePaddle/PaddleVideo/tree/application/FootballAction/datasets\n```\n- \u6570\u636e\u96c6label\u683c\u5f0f\n```\n{\n    \"0\": \"\u80cc\u666f\",\n    \"1\": \"\u56de\u653e\",\n    \"2\": \"\u8fdb\u7403-\u4e09\u5206\u7403\",\n    \"3\": \"\u8fdb\u7403-\u4e24\u5206\u7403\",\n    \"4\": \"\u8fdb\u7403-\u6263\u7bee\",\n    \"5\": \"\u7f5a\u7403\",\n    \"6\": \"\u8df3\u7403\"\n}\n```\n- \u6570\u636e\u96c6gts\u5904\u7406, \u5c06\u539f\u59cb\u6807\u6ce8\u6570\u636e\u5904\u7406\u6210\u5982\u4e0bjson\u683c\u5f0f\n```\n{\n    'fps': 5,\n    'gts': [\n        {\n            'url': 'xxx.mp4',\n            'total_frames': 6341,\n            'actions': [\n                {\n                    \"label_ids\": [6],\n                    \"label_names\": [\"\u8df3\u7403\"],\n                    \"start_id\": 395,\n                    \"end_id\": 399\n                },\n                ...\n            ]\n        },\n        ...\n    ]\n}\n```\n- \u6570\u636e\u96c6\u62bd\u5e27, \u7531mp4, \u5f97\u5230frames\u548cpcm, \u8fd9\u91cc\u9700\u8981\u6dfb\u52a0ffmpeg\u73af\u5883\n```\ncd datasets/script && python get_frames_pcm.py"
        },
        {
            "comment": "This code describes the storage location and structure of a basketball action dataset, including video files (mp4), image frames, audio files (pcm), and JSON files containing ground truth data. It also references the PaddleVideo footbal",
            "location": "\"/media/root/Prima/works/PaddleVideo/docs/src/applications/BasketballAction/README.md\":69-98",
            "content": "```\n- \u6570\u636e\u9884\u5904\u7406\u540e\u4fdd\u5b58\u683c\u5f0f\u5982\u4e0b\n```\n   |--  datasets                   # \u8bad\u7ec3\u6570\u636e\u96c6\u548c\u5904\u7406\u811a\u672c\n        |--  basketball            # xx\u6570\u636e\u96c6\n            |--  mp4               # \u539f\u59cb\u89c6\u9891.mp4\n            |--  frames            # \u56fe\u50cf\u5e27, fps=5, '.jpg'\u683c\u5f0f\n            |--  pcm               # \u97f3\u9891pcm, \u97f3\u9891\u91c7\u6837\u738716000\uff0c\u91c7\u7528\u901a\u9053\u65701\n            |--  url.list          # \u89c6\u9891\u5217\u8868\n            |--  label_train.json  # \u8bad\u7ec3\u96c6\u539f\u59cbgts\n            |--  label_val.json    # \u9a8c\u8bc1\u96c6\u539f\u59cbgts\n```\n## \u6a21\u578b\u8bad\u7ec3\n\u4ee3\u7801\u53c2\u8003\u8db3\u7403\u52a8\u4f5c\u68c0\u6d4b\uff1ahttps://github.com/PaddlePaddle/PaddleVideo/tree/application/FootballAction\n\u5c06\u8be5\u4ee3\u7801\u5e93\u7684\u6587\u4ef6\u5939 [datasets](https://github.com/PaddlePaddle/PaddleVideo/tree/application/FootballAction/datasets)\uff0c[extractor](https://github.com/PaddlePaddle/PaddleVideo/tree/application/FootballAction/extractor)\uff0c[train_lstm](https://github.com/PaddlePaddle/PaddleVideo/tree/application/FootballAction/train_lstm)\uff0c \u62f7\u8d1d\u5230\u672c\u4ee3\u7801\u5e93\u590d\u7528\u3002\n - image \u91c7\u6837\u9891\u7387fps=5\uff0c\u5982\u679c\u6709\u4e9b\u52a8\u4f5c\u65f6\u95f4\u8f83\u77ed\uff0c\u53ef\u4ee5\u9002\u5f53\u63d0\u9ad8\u91c7\u6837\u9891\u7387\n - BMN windows=200\uff0c\u537340s\uff0c\u6240\u4ee5\u6d4b\u8bd5\u81ea\u5df1\u7684\u6570\u636e\u65f6\uff0c\u89c6\u9891\u65f6\u957f\u9700\u5927\u4e8e40s\n### \u57fa\u7840\u955c\u50cf\n```\ndocker pull tmtalgo/paddleaction:action-detection-v2\n```\n### step1 ppTSM\u8bad\u7ec3\n\u6211\u4eec\u63d0\u4f9b\u4e86\u7bee\u7403\u6570\u636e\u8bad\u7ec3\u7684\u6a21\u578b\uff0c\u53c2\u8003checkpoints_basketball\u3002\u5982\u679c\u4f7f\u7528\u63d0\u4f9b\u7684pptsm\u6a21\u578b\uff0c\u53ef\u76f4\u63a5\u8df3\u8fc7\u4e0b\u8fb9\u7684pptsm\u8bad\u7ec3\u6570\u636e\u5904\u7406\u548c\u8bad\u7ec3\u6b65\u9aa4\u3002"
        },
        {
            "comment": "Step 1.1: Prepare ppTSM training data by combining frames and gts to generate positive and negative samples, following the format '{}_{}_{}_{}'.format(video_basename, start_id, end_id, label).\n\nStep 1.2: Train ppTSM model using the prepared dataset by modifying config.yaml parameters and running main.py with distributed launch script.\n\nStep 1.3: Convert trained ppTSM model to prediction mode for inference.",
            "location": "\"/media/root/Prima/works/PaddleVideo/docs/src/applications/BasketballAction/README.md\":99-134",
            "content": "\u5982\u679c\u9700\u8981\u5728\u81ea\u5df1\u7684\u6570\u636e\u4e0a\u8bad\u7ec3\uff0cppTSM\u8bad\u7ec3\u4ee3\u7801\u4e3a\uff1ahttps://github.com/PaddlePaddle/PaddleVideo/tree/release/2.0\nppTSM\u6587\u6863\u53c2\u8003\uff1ahttps://github.com/PaddlePaddle/PaddleVideo/blob/develop/docs/zh-CN/model_zoo/recognition/pp-tsm.md\n#### step1.1  ppTSM \u8bad\u7ec3\u6570\u636e\u5904\u7406\n\u7531frames\u7ed3\u5408gts\u751f\u6210\u8bad\u7ec3\u6240\u9700\u8981\u7684\u6b63\u8d1f\u6837\u672c\n```\ncd ${BasketballAction}\ncd datasets/script && python get_instance_for_tsn.py\n# \u6587\u4ef6\u540d\u6309\u7167\u5982\u4e0b\u683c\u5f0f\n'{}_{}_{}_{}'.format(video_basename, start_id, end_id, label)\n```\n\u5b8c\u6210\u8be5\u6b65\u9aa4\u540e\uff0c\u6570\u636e\u5b58\u50a8\u4f4d\u7f6e\n```\n   |--  datasets                   # \u8bad\u7ec3\u6570\u636e\u96c6\u548c\u5904\u7406\u811a\u672c\n        |--  basketball           # xx\u6570\u636e\u96c6\n            |--  input_for_tsn     # tsn/tsm\u8bad\u7ec3\u7684\u6570\u636e\n```\n#### step1.2 ppTSM\u6a21\u578b\u8bad\u7ec3\n```\n# https://github.com/PaddlePaddle/PaddleVideo/tree/release/2.0\ncd ${PaddleVideo}\n# \u4fee\u6539config.yaml\u53c2\u6570\u4fee\u6539\u4e3a ${BasketballAcation}/configs_train/pptsm_basketball.yaml\npython -B -m paddle.distributed.launch \\\n    --gpus=\"0,1,2,3\" \\\n    --log_dir=$save_dir/logs \\\n    main.py  \\\n    --validate \\\n    -c {BasketballAcation}/configs_train/pptsm_basketball.yaml \\\n    -o output_dir=$save_dir\n```\n#### step1.3 ppTSM\u6a21\u578b\u8f6c\u4e3a\u9884\u6d4b\u6a21\u5f0f\n```\n# https://github.com/PaddlePaddle/PaddleVideo/tree/release/2.0"
        },
        {
            "comment": "The provided code is related to a PaddleVideo application called BasketballAction. It performs two steps - extracting features from images and audio, and training a BMN model. The extracted features are stored in the datasets/basketball/features directory. The BMN training code can be found at this GitHub link, and more information about BMN can be found in this documentation.",
            "location": "\"/media/root/Prima/works/PaddleVideo/docs/src/applications/BasketballAction/README.md\":135-162",
            "content": "$cd {PaddleVideo}\npython tools/export_model.py -c ${BasketballAcation}/configs_train/pptsm_basketball.yaml \\\n                               -p ${pptsm_train_dir}/checkpoints/models_pptsm/ppTSM_epoch_00057.pdparams \\\n                               -o {BasketballAcation}/checkpoints/ppTSM\n```\n####  step1.4 \u57fa\u4e8eppTSM\u89c6\u9891\u7279\u5f81\u63d0\u53d6\nimage and audio\u7279\u5f81\u63d0\u53d6\uff0c\u4fdd\u5b58\u5230datasets features\u6587\u4ef6\u5939\u4e0b\n```\ncd ${BasketballAcation}\ncd extractor && python extract_feat.py\n# \u7279\u5f81\u7ef4\u5ea6, image(2048) + audio(1024) + pcm(640)\n# \u7279\u5f81\u4fdd\u5b58\u683c\u5f0f\u5982\u4e0b\uff0c\u5c06\u5982\u4e0bdict\u4fdd\u5b58\u5728pkl\u683c\u5f0f\uff0c\u7528\u4e8e\u63a5\u4e0b\u6765\u7684BMN\u8bad\u7ec3\nvideo_features = {'image_feature': np_image_features,\n                  'audio_feature': np_audio_features\n                  'pcm_feature': np_pcm_features}\n```\n\u5b8c\u6210\u8be5\u6b65\u9aa4\u540e\uff0c\u6570\u636e\u5b58\u50a8\u4f4d\u7f6e\n```\n   |--  datasets                   # \u8bad\u7ec3\u6570\u636e\u96c6\u548c\u5904\u7406\u811a\u672c\n        |--  basketball            # xx\u6570\u636e\u96c6\n            |--  features          # \u89c6\u9891\u7684\u56fe\u50cf+\u97f3\u9891\u7279\u5f81\n```\n### step2 BMN\u8bad\u7ec3\nBMN\u8bad\u7ec3\u4ee3\u7801\u4e3a\uff1ahttps://github.com/PaddlePaddle/PaddleVideo/tree/release/2.0\nBMN\u6587\u6863\u53c2\u8003\uff1ahttps://github.com/PaddlePaddle/PaddleVideo/blob/develop/docs/zh-CN/model_zoo/localization/bmn.md"
        },
        {
            "comment": "Step 2.1 involves processing the Basketball Action dataset to generate binary proposals for BMN training, with a window size of 40. This is done using the get_instance_for_bmn.py script in the datasets/script directory. The resulting data format consists of instance identifiers, duration and feature frame numbers, subset information (train or test), and annotations containing segment locations and labels. Step 2.2 involves training the BMN model, requiring modification of the config.yaml file with Basketball Action-specific parameters and launching the main.py script using PaddlePaddle's distributed training functionality.",
            "location": "\"/media/root/Prima/works/PaddleVideo/docs/src/applications/BasketballAction/README.md\":164-205",
            "content": "#### step2.1 BMN\u8bad\u7ec3\u6570\u636e\u5904\u7406\n\u7528\u4e8e\u63d0\u53d6\u4e8c\u5206\u7c7b\u7684proposal\uff0cwindows=40\uff0c\u6839\u636egts\u548c\u7279\u5f81\u5f97\u5230BMN\u8bad\u7ec3\u6240\u9700\u8981\u7684\u6570\u636e\u96c6\n```\ncd ${BasketballAcation}\ncd datasets/script && python get_instance_for_bmn.py\n# \u6570\u636e\u683c\u5f0f\n{\n    \"719b0a4bcb1f461eabb152298406b861_753_793\": {\n        \"duration_second\": 40.0,\n        \"duration_frame\": 200,\n        \"feature_frame\": 200,\n        \"subset\": \"train\",\n        \"annotations\": [\n            {\n                \"segment\": [\n                    15.0,\n                    22.0\n                ],\n                \"label\": \"6.0\",\n                \"label_name\": \"\u8df3\u7403\"\n            }\n        ]\n    },\n    ...\n}\n```\n\u5b8c\u6210\u8be5\u6b65\u9aa4\u540e\uff0c\u6570\u636e\u5b58\u50a8\u4f4d\u7f6e\n```\n   |--  datasets                   # \u8bad\u7ec3\u6570\u636e\u96c6\u548c\u5904\u7406\u811a\u672c\n        |--  basketball            # xx\u6570\u636e\u96c6\n            |--  input_for_bmn     # bmn\u8bad\u7ec3\u7684proposal         \n```\n#### step2.2  BMN\u6a21\u578b\u8bad\u7ec3\n```\n# https://github.com/PaddlePaddle/PaddleVideo/tree/release/2.0\ncd ${PaddleVideo}\n# \u4fee\u6539config.yaml\u53c2\u6570\u4fee\u4e3a${BasketballAcation}/configs_train/bmn_basketball.yaml\npython -B -m paddle.distributed.launch \\\n     --gpus=\"0,1\" \\\n     --log_dir=$out_dir/logs \\\n     main.py  \\"
        },
        {
            "comment": "The code is used in the BasketballAction application of the PaddleVideo library. It converts the BMN model to prediction mode (step2.3), exports it, and then performs BMN-based predictions (step2.4) for obtaining action proposal information like start, end, and score. This helps identify basketball actions from given videos.",
            "location": "\"/media/root/Prima/works/PaddleVideo/docs/src/applications/BasketballAction/README.md\":206-242",
            "content": "     --validate \\\n     -c ${BasketballAcation}/configs_train/bmn_basketball.yaml \\\n     -o output_dir=$out_dir\n```\n#### step2.3 BMN\u6a21\u578b\u8f6c\u4e3a\u9884\u6d4b\u6a21\u5f0f\n```\n# https://github.com/PaddlePaddle/PaddleVideo/tree/release/2.0\n${PaddleVideo}\npython tools/export_model.py -c $${BasketballAcation}/configs_train/bmn_basketball.yaml \\\n                               -p ${bmn_train_dir}/checkpoints/models_bmn/bmn_epoch16.pdparams \\\n                               -o {BasketballAcation}/checkpoints/BMN\n```\n#### step2.4  BMN\u6a21\u578b\u9884\u6d4b\n\u5f97\u5230\u52a8\u4f5cproposal\u4fe1\u606f\uff1a start_id, end_id, score\n```\ncd ${BasketballAcation}\ncd extractor && python extract_bmn.py\n# \u6570\u636e\u683c\u5f0f\n[\n    {\n        \"video_name\": \"c9516c903de3416c97dae91a59e968d7\",\n        \"num_proposal\": 5534,\n        \"bmn_results\": [\n            {\n                \"start\": 7850.0,\n                \"end\": 7873.0,\n                \"score\": 0.77194699622342\n            },\n            {\n                \"start\": 4400.0,\n                \"end\": 4443.0,\n                \"score\": 0.7663803287641536\n            },\n            ...\n        ]"
        },
        {
            "comment": "This code represents a JSON object containing information about a dataset for LSTM training. It includes the frame rate (fps), whether it's for training or validation, the total number of frames, the number of ground truth (gt) instances, and the number of proposals. The proposals contain details like label, normalized IOU, start time, end time, and score. This data is used to train a LSTM model in BasketballAction application.",
            "location": "\"/media/root/Prima/works/PaddleVideo/docs/src/applications/BasketballAction/README.md\":243-283",
            "content": "    },\n    ...\n]\n```\n\u5b8c\u6210\u8be5\u6b65\u9aa4\u540e\uff0c\u6570\u636e\u5b58\u50a8\u4f4d\u7f6e\n```\n   |--  datasets                   # \u8bad\u7ec3\u6570\u636e\u96c6\u548c\u5904\u7406\u811a\u672c\n        |--  basketball            # xx\u6570\u636e\u96c6\n            |--  feature_bmn\n                 |--  prop.json    # bmn \u9884\u6d4b\u7ed3\u679c\n```\n### step3 LSTM\u8bad\u7ec3\nLSTM\u8bad\u7ec3\u4ee3\u7801\u4e3a\uff1atrain_lstm\n#### step3.1  LSTM\u8bad\u7ec3\u6570\u636e\u5904\u7406\n\u5c06BMN\u5f97\u5230\u7684proposal\u622a\u65ad\u5e76\u5904\u7406\u6210LSTM\u8bad\u7ec3\u6240\u9700\u6570\u636e\u96c6\n```\ncd ${BasketballAcation}\ncd datasets/script && python get_instance_for_lstm.py\n# \u6570\u636e\u683c\u5f0f1\uff0clabel_info\n{\n    \"fps\": 5,\n    \"results\": [\n        {\n            \"url\": \"https://xxx.mp4\",\n            \"mode\": \"train\",        # train or validation\n            \"total_frames\": 6128,\n            \"num_gts\": 93,\n            \"num_proposals\": 5043,\n            \"proposal_actions\": [\n                {\n                    \"label\": 6,\n                    \"norm_iou\": 0.7575757575757576,\n                    \"norm_ioa\": 0.7575757575757576,\n                    \"norm_start\": -0.32,\n                    \"proposal\": {\n                        \"start\": 5011,\n                        \"end\": 5036,\n                        \"score\": 0.7723643666324231\n                    },"
        },
        {
            "comment": "This code is from the PaddleVideo library's BasketballAction application and provides information on data formats for LSTM training. The first format contains label information, start and end IDs in a JSON object. The second format includes features like audio, pcm, fps, and label info in a NumPy array. The third format is the label.txt file for LSTM training. After completing these steps, the trained data will be stored in the \"input_for_lstm\" folder within the BasketballAction dataset folder.",
            "location": "\"/media/root/Prima/works/PaddleVideo/docs/src/applications/BasketballAction/README.md\":284-318",
            "content": "                    \"hit_gts\": {\n                        \"label_ids\": [\n                            6\n                        ],\n                        \"label_names\": [\n                            \"\u8df3\u7403\"\n                        ],\n                        \"start_id\": 5003,\n                        \"end_id\": 5036\n                    }\n                },\n                ...\n        },\n        ...\n}\n# \u6570\u636e\u683c\u5f0f2\uff0cLSTM\u8bad\u7ec3\u6240\u9700\u8981\u7684feature\n{\n    'features': np.array(feature_hit, dtype=np.float32),    # TSM audio and pcm \u7279\u5f81, \u53ef\u6839\u636e\u9700\u6c42\u9009\u62e9\u7ec4\u5408\n    'feature_fps': 5,                                       # fps = 5\n    'label_info': {'norm_iou': 0.5, 'label': 3, ...},       # \u6570\u636e\u683c\u5f0f1\u4e2d\u7684'proposal_actions'\n    'video_name': 'c9516c903de3416c97dae91a59e968d7'        # video_name\n}\n# \u6570\u636e\u683c\u5f0f3\uff0cLSTM\u8bad\u7ec3\u6240\u9700label.txt\n'{} {}'.format(filename, label)\n```\n\u5b8c\u6210\u8be5\u6b65\u9aa4\u540e\uff0c\u6570\u636e\u5b58\u50a8\u4f4d\u7f6e\n```\n   |--  datasets                   # \u8bad\u7ec3\u6570\u636e\u96c6\u548c\u5904\u7406\u811a\u672c\n        |--  basketball            # xx\u6570\u636e\u96c6\n            |--  input_for_lstm    # LSTM\u8bad\u7ec3\u6570\u636e\u96c6\n```\n#### step3.2  LSTM\u8bad\u7ec3\n```\n#conf.yaml\u4fee\u6539\u4e3a ${BasketballAcation}/configs_train/lstm_basketball.yaml"
        },
        {
            "comment": "The code is converting the trained LSTM model to prediction mode, running model inference on testing data, and evaluating the results. This process involves using pre-prepared datasets and models from provided URLs for easy execution of prediction and evaluation.",
            "location": "\"/media/root/Prima/works/PaddleVideo/docs/src/applications/BasketballAction/README.md\":319-364",
            "content": "cd ${BasketballAcation}\npython -u scenario_lib/train.py \\\n    --model_name=ActionNet \\\n    --config=${BasketballAcation}/configs_train/lstm_basketball.yaml \\\n    --save_dir=${out_dir}\"/models_lstm/\" \\\n    --log_interval=5 \\\n    --valid_interval=1\n```\n#### step3.3 LSTM\u6a21\u578b\u8f6c\u4e3a\u9884\u6d4b\u6a21\u5f0f\n```\n${BasketballAcation}\npython tools/export_model.py -c ${BasketballAction}/train_lstm/conf/conf.yaml \\\n                               -p ${lstm_train_dir}/checkpoints/models_lstm/bmn_epoch29.pdparams \\\n                               -o {BasketballAcation}/checkpoints/LSTM\n```\n## \u6a21\u578b\u63a8\u7406\n\u6d4b\u8bd5\u6570\u636e\u683c\u5f0f\uff0c\u53ef\u53c2\u8003\u4f7f\u7528\u6837\u4f8b\n```\nwget https://videotag.bj.bcebos.com/Applications/basketball/datasets.tar.gz\n```\n\u6d4b\u8bd5\u6a21\u578b\uff0c\u53ef\u4f7f\u7528\u6211\u4eec\u63d0\u4f9b\u7684\u6a21\u578b\n```\nwget https://videotag.bj.bcebos.com/Applications/basketball/checkpoints_basketball.tar.gz\n```\n\u8fd0\u884c\u9884\u6d4b\u4ee3\u7801\n```\ncd ${BasketballAction}\ncd predict\n# \u5982\u679c\u4f7f\u7528\u81ea\u5df1\u8bad\u7ec3\u7684\u6a21\u578b\uff0c\u8bf7\u5c06\u5404\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\u8f6c\u6362\u7684inference\u6a21\u578b\u653e\u5230predict\u5e93\n# cp -rf ../checkpoints checkpoints_basketball\npython predict.py\n```\n\u4ea7\u51fa\u6587\u4ef6\n```\n${BasketballAction}/predict/results.json\n```\n## \u6a21\u578b\u8bc4\u4f30\n```\ncd ${BasketballAction}\ncd predict\npython eval.py results.json"
        },
        {
            "comment": "This code uses the TSM and BMN models for efficient video understanding, allowing for action detection with a F1-score of 80.14%. The code can optimize based on motion speed, time distribution, and feature fusion methods, and is applicable to other action detection scenarios.",
            "location": "\"/media/root/Prima/works/PaddleVideo/docs/src/applications/BasketballAction/README.md\":365-388",
            "content": "```\n## \u6a21\u578b\u4f18\u5316\n\u5728\u5b9e\u9645\u4f7f\u7528\u573a\u666f\u4e2d\u53ef\u6839\u636e\u89c6\u9891\u5185\u5bb9\u5c1d\u8bd5\u4f18\u5316\u7b56\u7565\n- \u53ef\u6839\u636e\u52a8\u4f5c\u8fd0\u52a8\u901f\u5ea6\uff0c\u8c03\u6574\u62bd\u5e27\u91c7\u6837\u7387\uff0c\u672c\u4ee3\u7801\u9ed8\u8ba4\u4e3afps=5\n- \u7edf\u8ba1\u52a8\u4f5c\u7684\u65f6\u95f4\u5206\u5e03\uff0c\u8c03\u6574bmn\u91c7\u6837\u7a97\u53e3\n- \u6839\u636e\u56fe\u50cf\u548c\u97f3\u9891\u7684\u5173\u8054\u7a0b\u5ea6\uff0c\u8c03\u6574\u56fe\u50cf\u548c\u97f3\u9891\u7279\u5f81\u7684\u878d\u5408\u65b9\u5f0f\uff1a\u672c\u4ee3\u7801\u5c06\u56fe\u50cf\u7279\u5f81\u548c\u97f3\u9891\u5728\u65f6\u95f4\u7ef4\u5ea6\u5bf9\u9f50\uff0c\u878d\u5408\u540e\u518d\u8fdb\u5165\u6a21\u578b\u8bad\u7ec3\u3002\u4e5f\u53ef\u5c1d\u8bd5\u5206\u522b\u6a21\u578b\u8bad\u7ec3\u540e\uff0c\u52a0\u6743\u878d\u5408\u7b49\n- \u672c\u4ee3\u7801\u7684\u89e3\u51b3\u65b9\u6848\u4e5f\u53ef\u7528\u4e8e\u5176\u4ed6\u52a8\u4f5c\u68c0\u6d4b\u3002\u53d8\u6362\u573a\u666f\u540e\uff0c\u56fe\u50cf\u7279\u5f81\u91cd\u65b0\u8bad\u7ec3\u6548\u679c\u66f4\u597d\u3002\u97f3\u9891\u7279\u5f81\u91c7\u7528\u7684VGGSound\u8bad\u7ec3\uff0c\u5982\u679c\u4f7f\u7528\u573a\u666f\u4ecd\u4e3a\u751f\u6d3b\u573a\u666f\uff0c\u53ef\u76f4\u63a5\u590d\u7528\u3002\n## \u6a21\u578b\u90e8\u7f72\n\u672c\u4ee3\u7801\u89e3\u51b3\u65b9\u6848\u5728\u52a8\u4f5c\u7684\u68c0\u6d4b\u548c\u53ec\u56de\u6307\u6807F1-score=80.14%\n<div align=\"center\">\n  <img src=\"images/BasketballAction_demo.gif\" width=\"640px\"/><br>\n</div>\n## \u53c2\u8003\u8bba\u6587\n- [TSM: Temporal Shift Module for Efficient Video Understanding](https://arxiv.org/pdf/1811.08383.pdf), Ji Lin, Chuang Gan, Song Han\n- [BMN: Boundary-Matching Network for Temporal Action Proposal Generation](https://arxiv.org/abs/1907.09702), Tianwei Lin, Xiao Liu, Xin Li, Errui Ding, Shilei Wen.\n- [Attention Clusters: Purely Attention Based Local Feature Integration for Video Classification](https://arxiv.org/abs/1711.09550), Xiang Long, Chuang Gan, Gerard de Melo, Jiajun Wu, Xiao Liu, Shilei Wen\n- [YouTube-8M: A Large-Scale Video Classification Benchmark](https://arxiv.org/abs/1609.08675), Sami Abu-El-Haija, Nisarg Kot"
        },
        {
            "comment": "Code represents authors of a paper or contributors to the project, including hari, Joonseok Lee, Paul Natsev, George Toderici, Balakrishnan Varadarajan, and Sudheendra Vijayanarasimhan.",
            "location": "\"/media/root/Prima/works/PaddleVideo/docs/src/applications/BasketballAction/README.md\":388-388",
            "content": "hari, Joonseok Lee, Paul Natsev, George Toderici, Balakrishnan Varadarajan, Sudheendra Vijayanarasimhan"
        }
    ]
}
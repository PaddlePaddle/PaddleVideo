{
    "summary": "RoIAlign is a class for region of interest alignment. It takes features, regions of interest (roi), and number of roi as inputs, and uses PaddlePaddle's roi_align operation to extract aligned features.",
    "details": [
        {
            "comment": "RoIAlign is a class used for region of interest alignment. It takes features, regions of interest (roi), and the number of roi as inputs. The aligned parameter specifies whether to return aligned features or not.",
            "location": "\"/media/root/Prima/works/PaddleVideo/docs/src/paddlevideo/modeling/heads/roi_extractor.py\":0-30",
            "content": "#   Copyright (c) 2021 PaddlePaddle Authors. All Rights Reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\nimport paddle\n#@register\nclass RoIAlign(object):\n    def __init__(self,\n                 resolution=14,\n                 spatial_scale=0.0625,\n                 sampling_ratio=0,\n                 aligned=False):\n        super(RoIAlign, self).__init__()\n        self.resolution = resolution\n        self.spatial_scale = spatial_scale\n        self.sampling_ratio = sampling_ratio\n        self.aligned = aligned\n    def __call__(self, feats, roi, rois_num):"
        },
        {
            "comment": "This code concatenates ROIs and ensures correct data type, then uses the PaddlePaddle library's roi_align operation to extract features from input features (feats) based on ROIs. If there is only one feature, it performs alignment for all ROIs. Otherwise, it creates a list of aligned feature tensors.",
            "location": "\"/media/root/Prima/works/PaddleVideo/docs/src/paddlevideo/modeling/heads/roi_extractor.py\":31-52",
            "content": "        roi = paddle.concat(roi) if len(roi) > 1 else roi[0]\n        rois_num = paddle.to_tensor(rois_num, dtype='int32')\n        rois_num = paddle.cast(rois_num, dtype='int32')\n        if len(feats) == 1:\n            roi_feat = paddle.vision.ops.roi_align(feats,\n                                     roi,\n                                     rois_num,\n                                     self.resolution,\n                                     self.spatial_scale,\n                                     self.sampling_ratio,\n                                     self.aligned)\n        else:\n            rois_feat_list = []\n            roi_feat = paddle.vision.ops.roi_align(feats,\n                                     roi,\n                                     rois_num,\n                                     self.resolution,\n                                     self.spatial_scale,\n                                     self.sampling_ratio,\n                                     self.aligned)\n        return roi_feat"
        }
    ]
}
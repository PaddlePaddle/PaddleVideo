{
    "summary": "The code trains and analyzes two models (dygraph and dy2static), compares their losses, logs the differences, and prints the results.",
    "details": [
        {
            "comment": "Source common functions and set IFS to handle line breaks. Read the BASE_CONFIG_FILE, identify MODE, get log path, delete existing directory if it exists, create a new one, set CUDNN deterministic for stable results, read base config, parse sub commands, and output relevant information.",
            "location": "\"/media/root/Prima/works/PaddleVideo/docs/src/test_tipc/test_train_dy2static_python.sh\":0-29",
            "content": "source test_tipc/common_func.sh\nIFS=$'\\n'\nBASE_CONFIG_FILE=$1\n# always use the lite_train_lite_infer mode to speed. Modify the config file.\nMODE=lite_train_lite_infer\nBASEDIR=$(dirname \"$0\")\n# get the log path.\ndataline=$(cat ${BASE_CONFIG_FILE})\nlines=(${dataline})\nmodel_name=$(func_parser_value \"${lines[1]}\")\nLOG_PATH=\"./test_tipc/output/${model_name}/${MODE}\"\nrm -rf $LOG_PATH\nmkdir -p ${LOG_PATH}\nstatus_log=\"${LOG_PATH}/results_python.log\"\n# make cudnn algorithm deterministic, such as conv.\nexport FLAGS_cudnn_deterministic=True\n# read the base config and parse and run the sub commands\nconfig_line_numbers=`cat ${BASE_CONFIG_FILE} | grep -n \"============\" | cut -d':' -f1`\nfor cln in $config_line_numbers\ndo\n    # change IFS to prevent \\n is parsed as delimiter.\n    IFS=\"\"\n    config_lines=$(cat ${BASE_CONFIG_FILE} | sed -n \"${cln},\\$p\" | head -n 22)\n    config_name=`echo ${config_lines} | grep '=====' | cut -d' ' -f2`\n    FILENAME=$LOG_PATH/dy2static_$config_name.txt\n    echo \"[Start dy2static]\" \"${config_name} : ${FILENAME}\""
        },
        {
            "comment": "This code is configuring, running and analyzing two different training models. It first sets the necessary environment, then runs a dygraph training model and a dy2static one, saving their results in separate logs. Finally, it extracts the losses from the dy2static log for comparison with the dygraph's loss.",
            "location": "\"/media/root/Prima/works/PaddleVideo/docs/src/test_tipc/test_train_dy2static_python.sh\":30-56",
            "content": "    echo ${config_lines} > $FILENAME\n    sed -i 's/gpu_list.*$/gpu_list:0/g' $FILENAME\n    # execute the last line command\n    custom_cmd=$(echo $config_lines | tail -n 1)\n    echo \"CustomCmd is: \" $custom_cmd\n    eval $custom_cmd\n    IFS=$'\\n'\n    # start dygraph train\n    dygraph_output=$LOG_PATH/${config_name}_python_train_infer_dygraph_output.txt\n    dygraph_loss=$LOG_PATH/${config_name}_dygraph_loss.txt\n    cmd=\"bash test_tipc/test_train_inference_python.sh ${FILENAME} $MODE >$dygraph_output 2>&1\"\n    echo $cmd\n    eval $cmd\n    # start dy2static train\n    dy2static_output=$LOG_PATH/${config_name}_python_train_infer_dy2static_output.txt\n    dy2static_loss=$LOG_PATH/${config_name}_dy2static_loss.txt\n    sed -i '16s/$/ -o to_static=True/' ${FILENAME}\n    cmd=\"bash test_tipc/test_train_inference_python.sh ${FILENAME} $MODE >$dy2static_output 2>&1\"\n    echo $cmd\n    eval $cmd\n    # analysis and compare the losses.\n    dyout=`cat $dy2static_output | python test_tipc/extract_loss.py -v 'train step' -e 'loss: {%f} ' | head -n 3`"
        },
        {
            "comment": "This code compares the outputs of two models (dygraph_loss and dy2static_loss), checks for differences using a diff command, and logs the result to diff_log. If either dyout or stout is empty, it runs status_check with different codes. Finally, it prints the diff_log.",
            "location": "\"/media/root/Prima/works/PaddleVideo/docs/src/test_tipc/test_train_dy2static_python.sh\":57-72",
            "content": "    stout=`cat $dygraph_output   | python test_tipc/extract_loss.py -v 'train step' -e 'loss: {%f} ' | head -n 3`\n    echo $dyout > $dygraph_loss\n    echo $stout > $dy2static_loss\n    diff_log=$LOG_PATH/${config_name}_diff_log.txt\n    diff_cmd=\"diff -w $dygraph_loss $dy2static_loss > $diff_log\"\n    eval $diff_cmd\n    last_status=$?\n    cat $diff_log\n    if [ \"$dyout\" = \"\" ]; then\n        status_check 1 $diff_cmd $status_log $model_name $diff_log\n    elif [ \"$stout\" = \"\" ]; then\n        status_check 2 $diff_cmd $status_log $model_name $diff_log\n    else\n        status_check $last_status $diff_cmd $status_log $model_name $diff_log\n    fi\ndone"
        }
    ]
}
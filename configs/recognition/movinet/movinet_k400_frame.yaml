MODEL: #MODEL field
  framework: "MoViNetRecognizerFrame" #Mandatory, indicate the type of network, associate to the 'paddlevideo/modeling/framework/' .
  backbone: #Mandatory, indicate the type of backbone, associate to the 'paddlevideo/modeling/backbones/' .
    name: "MoViNet" #Mandatory, The name of backbone.
    model_type: "A0"
    causal: False #True
    conv_type: "3d"
    num_classes: 400
  head:
    name: "MoViNetHead" #Mandatory, indicate the type of head, associate to the 'paddlevideo/modeling/heads'

DATASET: #DATASET field
  batch_size: 32 #128 #32 #Mandatory, bacth size
  num_workers: 4 #0 #Mandatory, XXX the number of subprocess on each GPU.
  train:
      format: "FrameDataset" #Mandatory, indicate the type of dataset, associate to the 'paddlevidel/loader/dateset'
      #data_prefix: "data/k400/rawframes" #Mandatory, train data root path
      file_path: "data/k400/train.list" #Mandatory, train data index file path
      suffix: 'img_{:05}.jpg'
  valid:
      format: "FrameDataset" #Mandatory, indicate the type of dataset, associate to the 'paddlevidel/loader/dateset'
      #data_prefix: "data/k400/rawframes" #Mandatory, valid data root path
      file_path: "data/k400/val.list" #Mandatory, valid data index file path
      suffix: 'img_{:05}.jpg'
  test:
      format: "FrameDataset" #Mandatory, indicate the type of dataset, associate to the 'paddlevidel/loader/dateset'
      #data_prefix: "data/k400/rawframes" #Mandatory, valid data root path
      file_path: "data/k400/val.list" #Mandatory, valid data index file path
      suffix: 'img_{:05}.jpg'


PIPELINE: #PIPELINE field
  train: #Mandotary, indicate the pipeline to deal with the training data, associate to the 'paddlevideo/loader/pipelines/'
    decode:
        name: "FrameDecoder"
    sample:
        name: "Sampler"
        num_seg: 50
        seg_len: 1
        valid_mode: False
    transform: #Mandotary, image transfrom operator
        - Scale:
            short_size: 192
        - MultiScaleCrop:
            target_size: 192
        - RandomCrop:
            target_size: 172
        - RandomFlip:
        - Image2Array:
        - Normalization:
            mean: [0.485, 0.456, 0.406]
            std: [0.229, 0.224, 0.225]

  valid: #Mandatory, indicate the pipeline to deal with the validing data. associate to the 'paddlevideo/loader/pipelines/'
    decode:
        name: "FrameDecoder"
    sample:
        name: "Sampler"
        num_seg: 50
        seg_len: 1
        valid_mode: True
    transform:
        - Scale:
            short_size: 192
        - CenterCrop:
            target_size: 172
        - Image2Array:
        - Normalization:
            mean: [0.485, 0.456, 0.406]
            std: [0.229, 0.224, 0.225]

  test:
    decode:
        name: "FrameDecoder"
    sample:
        name: "Sampler"
        num_seg: 50
        seg_len: 1
        valid_mode: True
    transform:
        - Scale:
            short_size: 192
        - CenterCrop:
            target_size: 172
        - Image2Array:
        - Normalization:
            mean: [0.485, 0.456, 0.406]
            std: [0.229, 0.224, 0.225]


OPTIMIZER: #OPTIMIZER field
  name: 'RMSProp'
  momentum: 0.9
  rho: 0.9
  epsilon: 1.0
  learning_rate:
    iter_step: True
    name: 'CustomWarmupCosineDecay'
    max_epoch: 160
    warmup_epochs: 10
    warmup_start_lr: 0.001
    cosine_base_lr: 0.5
  weight_decay:
    name: 'L2'
    value: 0.00003


METRIC:
  name: 'CenterCropMetric'


INFERENCE:
    name: 'ppTSM_Inference_helper'
    num_seg: 50
    short_size: 192
    target_size: 172

model_name: "MoViNet"
log_interval: 1 #20 #Optional, the interal of logger, default:10
save_interval: 10
epochs: 160 #Mandatory, total epoch
log_level: "INFO" #Optional, the logger level. default: "INFO"
